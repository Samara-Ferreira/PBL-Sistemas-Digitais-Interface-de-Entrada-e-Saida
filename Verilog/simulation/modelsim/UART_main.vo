// Copyright (C) 2023  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 22.1std.2 Build 922 07/20/2023 SC Lite Edition"

// DATE "08/20/2023 13:11:25"

// 
// Device: Altera EPM240T100C5 Package TQFP100
// 

// 
// This Verilog file should be used for ModelSim (Verilog) only
// 

`timescale 1 ps/ 1 ps

module UART_2BYTES (
	clk,
	input_rx,
	tx_active,
	out_tx,
	done);
input 	clk;
input 	input_rx;
output 	tx_active;
output 	out_tx;
output 	done;

// Design Ports Information


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \clk~combout ;
wire \~GND~combout ;
wire \lkm|state.00~regout ;
wire \lkm|counter[0]~13 ;
wire \lkm|counter[1]~15 ;
wire \lkm|counter[1]~15COUT1_27 ;
wire \lkm|counter[2]~17 ;
wire \lkm|counter[2]~17COUT1_28 ;
wire \lkm|counter[3]~19 ;
wire \lkm|counter[3]~19COUT1_29 ;
wire \lkm|counter[4]~21 ;
wire \lkm|counter[4]~21COUT1_30 ;
wire \lkm|counter[5]~23 ;
wire \lkm|counter[6]~25 ;
wire \lkm|counter[6]~25COUT1_31 ;
wire \lkm|counter[7]~7 ;
wire \lkm|counter[7]~7COUT1_32 ;
wire \lkm|counter[8]~9 ;
wire \lkm|counter[8]~9COUT1_33 ;
wire \lkm|counter[9]~11 ;
wire \lkm|counter[9]~11COUT1_34 ;
wire \lkm|counter[10]~3 ;
wire \lkm|counter[11]~1 ;
wire \lkm|counter[11]~1COUT1_35 ;
wire \lkm|LessThan1~0_combout ;
wire \lkm|LessThan1~1_combout ;
wire \lkm|LessThan1~2_combout ;
wire \lkm|LessThan1~3_combout ;
wire \lkm|bit_index[0]~1_combout ;
wire \lkm|state.STOP~0_combout ;
wire \lkm|state.START~regout ;
wire \lkm|state.DATA~regout ;
wire \lkm|state.STOP~regout ;
wire \lkm|done~regout ;
wire \reg_rx|state.00~regout ;
wire \reg_rx|state.IDLE_2BYTE~regout ;
wire \reg_rx|state.ADD_ADDRESS~regout ;
wire \input_rx~combout ;
wire \rx|data_serial_buffer~regout ;
wire \rx|rx_data~regout ;
wire \rx|counter[3]~26_combout ;
wire \rx|counter[0]~17 ;
wire \rx|counter[1]~19 ;
wire \rx|counter[1]~19COUT1_29 ;
wire \rx|counter[2]~15 ;
wire \rx|counter[2]~15COUT1_30 ;
wire \rx|counter[3]~21 ;
wire \rx|counter[3]~21COUT1_31 ;
wire \rx|counter[4]~9 ;
wire \rx|counter[4]~9COUT1_32 ;
wire \rx|counter[5]~11 ;
wire \rx|counter[6]~13 ;
wire \rx|counter[6]~13COUT1_33 ;
wire \rx|counter[7]~3 ;
wire \rx|counter[7]~3COUT1_34 ;
wire \rx|counter[8]~5 ;
wire \rx|counter[8]~5COUT1_35 ;
wire \rx|counter[9]~7 ;
wire \rx|counter[9]~7COUT1_36 ;
wire \rx|counter[10]~23 ;
wire \rx|LessThan2~0_combout ;
wire \rx|LessThan2~2_combout ;
wire \rx|LessThan2~1_combout ;
wire \rx|LessThan2~3_combout ;
wire \rx|LessThan2~4_combout ;
wire \rx|counter[3]~27_combout ;
wire \rx|counter[11]~1 ;
wire \rx|counter[11]~1COUT1_37 ;
wire \rx|Equal0~2_combout ;
wire \rx|Equal0~0_combout ;
wire \rx|Equal0~1_combout ;
wire \rx|Equal0~3_combout ;
wire \rx|Selector13~0_combout ;
wire \rx|state.00~regout ;
wire \rx|state.START~regout ;
wire \rx|Selector15~0_combout ;
wire \rx|LessThan2~5_combout ;
wire \rx|bit_index[0]~1_combout ;
wire \rx|state.STOP~0_combout ;
wire \rx|state.DATA~regout ;
wire \rx|state.STOP~regout ;
wire \rx|data_avail~regout ;
wire \reg_rx|state.ADD_COMMAND~regout ;
wire \reg_rx|done~regout ;
wire \reg_txkjnn|state.00~regout ;
wire \reg_txkjnn|state.BYTE_ONE~regout ;
wire \reg_txkjnn|state.BYTE_TWO~regout ;
wire \reg_txkjnn|state.TEMPO~regout ;
wire \reg_txkjnn|byte_sent~regout ;
wire \lkm|Selector15~2_combout ;
wire \lkm|tx_active~regout ;
wire \rx|data_reg[7]~0_combout ;
wire \rx|Decoder0~7_combout ;
wire \reg_rx|buffer_data[1]~0 ;
wire \reg_txkjnn|Selector1~0 ;
wire \reg_txkjnn|data_aux~0 ;
wire \lkm|data_bit[1]~0_combout ;
wire \rx|Decoder0~6_combout ;
wire \rx|Decoder0~5_combout ;
wire \lkm|Mux0~2 ;
wire \rx|Decoder0~4_combout ;
wire \lkm|Mux0~3 ;
wire \rx|Decoder0~3_combout ;
wire \rx|Decoder0~0_combout ;
wire \rx|Decoder0~2_combout ;
wire \rx|Decoder0~1_combout ;
wire \lkm|Mux0~0 ;
wire \lkm|Mux0~1 ;
wire \lkm|Selector0~0_combout ;
wire \lkm|out_tx~regout ;
wire [7:0] \rx|data_reg ;
wire [12:0] \lkm|counter ;
wire [2:0] \lkm|bit_index ;
wire [15:0] \reg_rx|registrar ;
wire [7:0] \reg_txkjnn|data_aux ;
wire [7:0] \lkm|data_bit ;
wire [7:0] \reg_rx|buffer_data ;
wire [15:0] \reg_txkjnn|buffer ;
wire [2:0] \rx|bit_index ;
wire [12:0] \rx|counter ;


// Location: PIN_12,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \clk~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\clk~combout ),
	.padio(clk));
// synopsys translate_off
defparam \clk~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X7_Y1_N9
maxii_lcell \~GND (
// Equation(s):
// \~GND~combout  = GND

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\~GND~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \~GND .lut_mask = "0000";
defparam \~GND .operation_mode = "normal";
defparam \~GND .output_mode = "comb_only";
defparam \~GND .register_cascade_mode = "off";
defparam \~GND .sum_lutc_input = "datac";
defparam \~GND .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N6
maxii_lcell \lkm|state.00 (
// Equation(s):
// \lkm|state.00~regout  = DFFEAS((\reg_txkjnn|byte_sent~regout  & (((!\lkm|LessThan1~3_combout )) # (!\lkm|state.STOP~regout ))) # (!\reg_txkjnn|byte_sent~regout  & (\lkm|state.00~regout  & ((!\lkm|LessThan1~3_combout ) # (!\lkm|state.STOP~regout )))), 
// GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\reg_txkjnn|byte_sent~regout ),
	.datab(\lkm|state.STOP~regout ),
	.datac(\lkm|LessThan1~3_combout ),
	.datad(\lkm|state.00~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\lkm|state.00~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lkm|state.00 .lut_mask = "3f2a";
defparam \lkm|state.00 .operation_mode = "normal";
defparam \lkm|state.00 .output_mode = "reg_only";
defparam \lkm|state.00 .register_cascade_mode = "off";
defparam \lkm|state.00 .sum_lutc_input = "datac";
defparam \lkm|state.00 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y1_N4
maxii_lcell \lkm|counter[0] (
// Equation(s):
// \lkm|counter [0] = DFFEAS((!\lkm|counter [0]), GLOBAL(\clk~combout ), VCC, , , \~GND~combout , , !\lkm|state.00~regout , \lkm|LessThan1~3_combout )
// \lkm|counter[0]~13  = CARRY((\lkm|counter [0]))

	.clk(\clk~combout ),
	.dataa(\lkm|counter [0]),
	.datab(vcc),
	.datac(\~GND~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(!\lkm|state.00~regout ),
	.sload(\lkm|LessThan1~3_combout ),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\lkm|counter [0]),
	.cout(\lkm|counter[0]~13 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lkm|counter[0] .lut_mask = "55aa";
defparam \lkm|counter[0] .operation_mode = "arithmetic";
defparam \lkm|counter[0] .output_mode = "reg_only";
defparam \lkm|counter[0] .register_cascade_mode = "off";
defparam \lkm|counter[0] .sum_lutc_input = "datac";
defparam \lkm|counter[0] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y1_N5
maxii_lcell \lkm|counter[1] (
// Equation(s):
// \lkm|counter [1] = DFFEAS(\lkm|counter [1] $ ((((\lkm|counter[0]~13 )))), GLOBAL(\clk~combout ), VCC, , , \~GND~combout , , !\lkm|state.00~regout , \lkm|LessThan1~3_combout )
// \lkm|counter[1]~15  = CARRY(((!\lkm|counter[0]~13 )) # (!\lkm|counter [1]))
// \lkm|counter[1]~15COUT1_27  = CARRY(((!\lkm|counter[0]~13 )) # (!\lkm|counter [1]))

	.clk(\clk~combout ),
	.dataa(\lkm|counter [1]),
	.datab(vcc),
	.datac(\~GND~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(!\lkm|state.00~regout ),
	.sload(\lkm|LessThan1~3_combout ),
	.ena(vcc),
	.cin(\lkm|counter[0]~13 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\lkm|counter [1]),
	.cout(),
	.cout0(\lkm|counter[1]~15 ),
	.cout1(\lkm|counter[1]~15COUT1_27 ));
// synopsys translate_off
defparam \lkm|counter[1] .cin_used = "true";
defparam \lkm|counter[1] .lut_mask = "5a5f";
defparam \lkm|counter[1] .operation_mode = "arithmetic";
defparam \lkm|counter[1] .output_mode = "reg_only";
defparam \lkm|counter[1] .register_cascade_mode = "off";
defparam \lkm|counter[1] .sum_lutc_input = "cin";
defparam \lkm|counter[1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y1_N6
maxii_lcell \lkm|counter[2] (
// Equation(s):
// \lkm|counter [2] = DFFEAS((\lkm|counter [2] $ ((!(!\lkm|counter[0]~13  & \lkm|counter[1]~15 ) # (\lkm|counter[0]~13  & \lkm|counter[1]~15COUT1_27 )))), GLOBAL(\clk~combout ), VCC, , , \~GND~combout , , !\lkm|state.00~regout , \lkm|LessThan1~3_combout )
// \lkm|counter[2]~17  = CARRY(((\lkm|counter [2] & !\lkm|counter[1]~15 )))
// \lkm|counter[2]~17COUT1_28  = CARRY(((\lkm|counter [2] & !\lkm|counter[1]~15COUT1_27 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\lkm|counter [2]),
	.datac(\~GND~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(!\lkm|state.00~regout ),
	.sload(\lkm|LessThan1~3_combout ),
	.ena(vcc),
	.cin(\lkm|counter[0]~13 ),
	.cin0(\lkm|counter[1]~15 ),
	.cin1(\lkm|counter[1]~15COUT1_27 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\lkm|counter [2]),
	.cout(),
	.cout0(\lkm|counter[2]~17 ),
	.cout1(\lkm|counter[2]~17COUT1_28 ));
// synopsys translate_off
defparam \lkm|counter[2] .cin0_used = "true";
defparam \lkm|counter[2] .cin1_used = "true";
defparam \lkm|counter[2] .cin_used = "true";
defparam \lkm|counter[2] .lut_mask = "c30c";
defparam \lkm|counter[2] .operation_mode = "arithmetic";
defparam \lkm|counter[2] .output_mode = "reg_only";
defparam \lkm|counter[2] .register_cascade_mode = "off";
defparam \lkm|counter[2] .sum_lutc_input = "cin";
defparam \lkm|counter[2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y1_N7
maxii_lcell \lkm|counter[3] (
// Equation(s):
// \lkm|counter [3] = DFFEAS((\lkm|counter [3] $ (((!\lkm|counter[0]~13  & \lkm|counter[2]~17 ) # (\lkm|counter[0]~13  & \lkm|counter[2]~17COUT1_28 )))), GLOBAL(\clk~combout ), VCC, , , \~GND~combout , , !\lkm|state.00~regout , \lkm|LessThan1~3_combout )
// \lkm|counter[3]~19  = CARRY(((!\lkm|counter[2]~17 ) # (!\lkm|counter [3])))
// \lkm|counter[3]~19COUT1_29  = CARRY(((!\lkm|counter[2]~17COUT1_28 ) # (!\lkm|counter [3])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\lkm|counter [3]),
	.datac(\~GND~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(!\lkm|state.00~regout ),
	.sload(\lkm|LessThan1~3_combout ),
	.ena(vcc),
	.cin(\lkm|counter[0]~13 ),
	.cin0(\lkm|counter[2]~17 ),
	.cin1(\lkm|counter[2]~17COUT1_28 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\lkm|counter [3]),
	.cout(),
	.cout0(\lkm|counter[3]~19 ),
	.cout1(\lkm|counter[3]~19COUT1_29 ));
// synopsys translate_off
defparam \lkm|counter[3] .cin0_used = "true";
defparam \lkm|counter[3] .cin1_used = "true";
defparam \lkm|counter[3] .cin_used = "true";
defparam \lkm|counter[3] .lut_mask = "3c3f";
defparam \lkm|counter[3] .operation_mode = "arithmetic";
defparam \lkm|counter[3] .output_mode = "reg_only";
defparam \lkm|counter[3] .register_cascade_mode = "off";
defparam \lkm|counter[3] .sum_lutc_input = "cin";
defparam \lkm|counter[3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y1_N8
maxii_lcell \lkm|counter[4] (
// Equation(s):
// \lkm|counter [4] = DFFEAS(\lkm|counter [4] $ ((((!(!\lkm|counter[0]~13  & \lkm|counter[3]~19 ) # (\lkm|counter[0]~13  & \lkm|counter[3]~19COUT1_29 ))))), GLOBAL(\clk~combout ), VCC, , , \~GND~combout , , !\lkm|state.00~regout , \lkm|LessThan1~3_combout )
// \lkm|counter[4]~21  = CARRY((\lkm|counter [4] & ((!\lkm|counter[3]~19 ))))
// \lkm|counter[4]~21COUT1_30  = CARRY((\lkm|counter [4] & ((!\lkm|counter[3]~19COUT1_29 ))))

	.clk(\clk~combout ),
	.dataa(\lkm|counter [4]),
	.datab(vcc),
	.datac(\~GND~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(!\lkm|state.00~regout ),
	.sload(\lkm|LessThan1~3_combout ),
	.ena(vcc),
	.cin(\lkm|counter[0]~13 ),
	.cin0(\lkm|counter[3]~19 ),
	.cin1(\lkm|counter[3]~19COUT1_29 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\lkm|counter [4]),
	.cout(),
	.cout0(\lkm|counter[4]~21 ),
	.cout1(\lkm|counter[4]~21COUT1_30 ));
// synopsys translate_off
defparam \lkm|counter[4] .cin0_used = "true";
defparam \lkm|counter[4] .cin1_used = "true";
defparam \lkm|counter[4] .cin_used = "true";
defparam \lkm|counter[4] .lut_mask = "a50a";
defparam \lkm|counter[4] .operation_mode = "arithmetic";
defparam \lkm|counter[4] .output_mode = "reg_only";
defparam \lkm|counter[4] .register_cascade_mode = "off";
defparam \lkm|counter[4] .sum_lutc_input = "cin";
defparam \lkm|counter[4] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y1_N9
maxii_lcell \lkm|counter[5] (
// Equation(s):
// \lkm|counter [5] = DFFEAS((\lkm|counter [5] $ (((!\lkm|counter[0]~13  & \lkm|counter[4]~21 ) # (\lkm|counter[0]~13  & \lkm|counter[4]~21COUT1_30 )))), GLOBAL(\clk~combout ), VCC, , , \~GND~combout , , !\lkm|state.00~regout , \lkm|LessThan1~3_combout )
// \lkm|counter[5]~23  = CARRY(((!\lkm|counter[4]~21COUT1_30 ) # (!\lkm|counter [5])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\lkm|counter [5]),
	.datac(\~GND~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(!\lkm|state.00~regout ),
	.sload(\lkm|LessThan1~3_combout ),
	.ena(vcc),
	.cin(\lkm|counter[0]~13 ),
	.cin0(\lkm|counter[4]~21 ),
	.cin1(\lkm|counter[4]~21COUT1_30 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\lkm|counter [5]),
	.cout(\lkm|counter[5]~23 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lkm|counter[5] .cin0_used = "true";
defparam \lkm|counter[5] .cin1_used = "true";
defparam \lkm|counter[5] .cin_used = "true";
defparam \lkm|counter[5] .lut_mask = "3c3f";
defparam \lkm|counter[5] .operation_mode = "arithmetic";
defparam \lkm|counter[5] .output_mode = "reg_only";
defparam \lkm|counter[5] .register_cascade_mode = "off";
defparam \lkm|counter[5] .sum_lutc_input = "cin";
defparam \lkm|counter[5] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y1_N0
maxii_lcell \lkm|counter[6] (
// Equation(s):
// \lkm|counter [6] = DFFEAS((\lkm|counter [6] $ ((!\lkm|counter[5]~23 ))), GLOBAL(\clk~combout ), VCC, , , \~GND~combout , , !\lkm|state.00~regout , \lkm|LessThan1~3_combout )
// \lkm|counter[6]~25  = CARRY(((\lkm|counter [6] & !\lkm|counter[5]~23 )))
// \lkm|counter[6]~25COUT1_31  = CARRY(((\lkm|counter [6] & !\lkm|counter[5]~23 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\lkm|counter [6]),
	.datac(\~GND~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(!\lkm|state.00~regout ),
	.sload(\lkm|LessThan1~3_combout ),
	.ena(vcc),
	.cin(\lkm|counter[5]~23 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\lkm|counter [6]),
	.cout(),
	.cout0(\lkm|counter[6]~25 ),
	.cout1(\lkm|counter[6]~25COUT1_31 ));
// synopsys translate_off
defparam \lkm|counter[6] .cin_used = "true";
defparam \lkm|counter[6] .lut_mask = "c30c";
defparam \lkm|counter[6] .operation_mode = "arithmetic";
defparam \lkm|counter[6] .output_mode = "reg_only";
defparam \lkm|counter[6] .register_cascade_mode = "off";
defparam \lkm|counter[6] .sum_lutc_input = "cin";
defparam \lkm|counter[6] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y1_N1
maxii_lcell \lkm|counter[7] (
// Equation(s):
// \lkm|counter [7] = DFFEAS((\lkm|counter [7] $ (((!\lkm|counter[5]~23  & \lkm|counter[6]~25 ) # (\lkm|counter[5]~23  & \lkm|counter[6]~25COUT1_31 )))), GLOBAL(\clk~combout ), VCC, , , \~GND~combout , , !\lkm|state.00~regout , \lkm|LessThan1~3_combout )
// \lkm|counter[7]~7  = CARRY(((!\lkm|counter[6]~25 ) # (!\lkm|counter [7])))
// \lkm|counter[7]~7COUT1_32  = CARRY(((!\lkm|counter[6]~25COUT1_31 ) # (!\lkm|counter [7])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\lkm|counter [7]),
	.datac(\~GND~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(!\lkm|state.00~regout ),
	.sload(\lkm|LessThan1~3_combout ),
	.ena(vcc),
	.cin(\lkm|counter[5]~23 ),
	.cin0(\lkm|counter[6]~25 ),
	.cin1(\lkm|counter[6]~25COUT1_31 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\lkm|counter [7]),
	.cout(),
	.cout0(\lkm|counter[7]~7 ),
	.cout1(\lkm|counter[7]~7COUT1_32 ));
// synopsys translate_off
defparam \lkm|counter[7] .cin0_used = "true";
defparam \lkm|counter[7] .cin1_used = "true";
defparam \lkm|counter[7] .cin_used = "true";
defparam \lkm|counter[7] .lut_mask = "3c3f";
defparam \lkm|counter[7] .operation_mode = "arithmetic";
defparam \lkm|counter[7] .output_mode = "reg_only";
defparam \lkm|counter[7] .register_cascade_mode = "off";
defparam \lkm|counter[7] .sum_lutc_input = "cin";
defparam \lkm|counter[7] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y1_N2
maxii_lcell \lkm|counter[8] (
// Equation(s):
// \lkm|counter [8] = DFFEAS((\lkm|counter [8] $ ((!(!\lkm|counter[5]~23  & \lkm|counter[7]~7 ) # (\lkm|counter[5]~23  & \lkm|counter[7]~7COUT1_32 )))), GLOBAL(\clk~combout ), VCC, , , \~GND~combout , , !\lkm|state.00~regout , \lkm|LessThan1~3_combout )
// \lkm|counter[8]~9  = CARRY(((\lkm|counter [8] & !\lkm|counter[7]~7 )))
// \lkm|counter[8]~9COUT1_33  = CARRY(((\lkm|counter [8] & !\lkm|counter[7]~7COUT1_32 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\lkm|counter [8]),
	.datac(\~GND~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(!\lkm|state.00~regout ),
	.sload(\lkm|LessThan1~3_combout ),
	.ena(vcc),
	.cin(\lkm|counter[5]~23 ),
	.cin0(\lkm|counter[7]~7 ),
	.cin1(\lkm|counter[7]~7COUT1_32 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\lkm|counter [8]),
	.cout(),
	.cout0(\lkm|counter[8]~9 ),
	.cout1(\lkm|counter[8]~9COUT1_33 ));
// synopsys translate_off
defparam \lkm|counter[8] .cin0_used = "true";
defparam \lkm|counter[8] .cin1_used = "true";
defparam \lkm|counter[8] .cin_used = "true";
defparam \lkm|counter[8] .lut_mask = "c30c";
defparam \lkm|counter[8] .operation_mode = "arithmetic";
defparam \lkm|counter[8] .output_mode = "reg_only";
defparam \lkm|counter[8] .register_cascade_mode = "off";
defparam \lkm|counter[8] .sum_lutc_input = "cin";
defparam \lkm|counter[8] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y1_N3
maxii_lcell \lkm|counter[9] (
// Equation(s):
// \lkm|counter [9] = DFFEAS(\lkm|counter [9] $ (((((!\lkm|counter[5]~23  & \lkm|counter[8]~9 ) # (\lkm|counter[5]~23  & \lkm|counter[8]~9COUT1_33 ))))), GLOBAL(\clk~combout ), VCC, , , \~GND~combout , , !\lkm|state.00~regout , \lkm|LessThan1~3_combout )
// \lkm|counter[9]~11  = CARRY(((!\lkm|counter[8]~9 )) # (!\lkm|counter [9]))
// \lkm|counter[9]~11COUT1_34  = CARRY(((!\lkm|counter[8]~9COUT1_33 )) # (!\lkm|counter [9]))

	.clk(\clk~combout ),
	.dataa(\lkm|counter [9]),
	.datab(vcc),
	.datac(\~GND~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(!\lkm|state.00~regout ),
	.sload(\lkm|LessThan1~3_combout ),
	.ena(vcc),
	.cin(\lkm|counter[5]~23 ),
	.cin0(\lkm|counter[8]~9 ),
	.cin1(\lkm|counter[8]~9COUT1_33 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\lkm|counter [9]),
	.cout(),
	.cout0(\lkm|counter[9]~11 ),
	.cout1(\lkm|counter[9]~11COUT1_34 ));
// synopsys translate_off
defparam \lkm|counter[9] .cin0_used = "true";
defparam \lkm|counter[9] .cin1_used = "true";
defparam \lkm|counter[9] .cin_used = "true";
defparam \lkm|counter[9] .lut_mask = "5a5f";
defparam \lkm|counter[9] .operation_mode = "arithmetic";
defparam \lkm|counter[9] .output_mode = "reg_only";
defparam \lkm|counter[9] .register_cascade_mode = "off";
defparam \lkm|counter[9] .sum_lutc_input = "cin";
defparam \lkm|counter[9] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y1_N4
maxii_lcell \lkm|counter[10] (
// Equation(s):
// \lkm|counter [10] = DFFEAS(\lkm|counter [10] $ ((((!(!\lkm|counter[5]~23  & \lkm|counter[9]~11 ) # (\lkm|counter[5]~23  & \lkm|counter[9]~11COUT1_34 ))))), GLOBAL(\clk~combout ), VCC, , , \~GND~combout , , !\lkm|state.00~regout , \lkm|LessThan1~3_combout 
// )
// \lkm|counter[10]~3  = CARRY((\lkm|counter [10] & ((!\lkm|counter[9]~11COUT1_34 ))))

	.clk(\clk~combout ),
	.dataa(\lkm|counter [10]),
	.datab(vcc),
	.datac(\~GND~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(!\lkm|state.00~regout ),
	.sload(\lkm|LessThan1~3_combout ),
	.ena(vcc),
	.cin(\lkm|counter[5]~23 ),
	.cin0(\lkm|counter[9]~11 ),
	.cin1(\lkm|counter[9]~11COUT1_34 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\lkm|counter [10]),
	.cout(\lkm|counter[10]~3 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lkm|counter[10] .cin0_used = "true";
defparam \lkm|counter[10] .cin1_used = "true";
defparam \lkm|counter[10] .cin_used = "true";
defparam \lkm|counter[10] .lut_mask = "a50a";
defparam \lkm|counter[10] .operation_mode = "arithmetic";
defparam \lkm|counter[10] .output_mode = "reg_only";
defparam \lkm|counter[10] .register_cascade_mode = "off";
defparam \lkm|counter[10] .sum_lutc_input = "cin";
defparam \lkm|counter[10] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y1_N5
maxii_lcell \lkm|counter[11] (
// Equation(s):
// \lkm|counter [11] = DFFEAS(\lkm|counter [11] $ ((((\lkm|counter[10]~3 )))), GLOBAL(\clk~combout ), VCC, , , \~GND~combout , , !\lkm|state.00~regout , \lkm|LessThan1~3_combout )
// \lkm|counter[11]~1  = CARRY(((!\lkm|counter[10]~3 )) # (!\lkm|counter [11]))
// \lkm|counter[11]~1COUT1_35  = CARRY(((!\lkm|counter[10]~3 )) # (!\lkm|counter [11]))

	.clk(\clk~combout ),
	.dataa(\lkm|counter [11]),
	.datab(vcc),
	.datac(\~GND~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(!\lkm|state.00~regout ),
	.sload(\lkm|LessThan1~3_combout ),
	.ena(vcc),
	.cin(\lkm|counter[10]~3 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\lkm|counter [11]),
	.cout(),
	.cout0(\lkm|counter[11]~1 ),
	.cout1(\lkm|counter[11]~1COUT1_35 ));
// synopsys translate_off
defparam \lkm|counter[11] .cin_used = "true";
defparam \lkm|counter[11] .lut_mask = "5a5f";
defparam \lkm|counter[11] .operation_mode = "arithmetic";
defparam \lkm|counter[11] .output_mode = "reg_only";
defparam \lkm|counter[11] .register_cascade_mode = "off";
defparam \lkm|counter[11] .sum_lutc_input = "cin";
defparam \lkm|counter[11] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y1_N6
maxii_lcell \lkm|counter[12] (
// Equation(s):
// \lkm|counter [12] = DFFEAS((((!\lkm|counter[10]~3  & \lkm|counter[11]~1 ) # (\lkm|counter[10]~3  & \lkm|counter[11]~1COUT1_35 ) $ (!\lkm|counter [12]))), GLOBAL(\clk~combout ), VCC, , , \~GND~combout , , !\lkm|state.00~regout , \lkm|LessThan1~3_combout )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\~GND~combout ),
	.datad(\lkm|counter [12]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(!\lkm|state.00~regout ),
	.sload(\lkm|LessThan1~3_combout ),
	.ena(vcc),
	.cin(\lkm|counter[10]~3 ),
	.cin0(\lkm|counter[11]~1 ),
	.cin1(\lkm|counter[11]~1COUT1_35 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\lkm|counter [12]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lkm|counter[12] .cin0_used = "true";
defparam \lkm|counter[12] .cin1_used = "true";
defparam \lkm|counter[12] .cin_used = "true";
defparam \lkm|counter[12] .lut_mask = "f00f";
defparam \lkm|counter[12] .operation_mode = "normal";
defparam \lkm|counter[12] .output_mode = "reg_only";
defparam \lkm|counter[12] .register_cascade_mode = "off";
defparam \lkm|counter[12] .sum_lutc_input = "cin";
defparam \lkm|counter[12] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y1_N2
maxii_lcell \lkm|LessThan1~0 (
// Equation(s):
// \lkm|LessThan1~0_combout  = (!\lkm|counter [3] & (((!\lkm|counter [2]) # (!\lkm|counter [0])) # (!\lkm|counter [1])))

	.clk(gnd),
	.dataa(\lkm|counter [1]),
	.datab(\lkm|counter [3]),
	.datac(\lkm|counter [0]),
	.datad(\lkm|counter [2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lkm|LessThan1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lkm|LessThan1~0 .lut_mask = "1333";
defparam \lkm|LessThan1~0 .operation_mode = "normal";
defparam \lkm|LessThan1~0 .output_mode = "comb_only";
defparam \lkm|LessThan1~0 .register_cascade_mode = "off";
defparam \lkm|LessThan1~0 .sum_lutc_input = "datac";
defparam \lkm|LessThan1~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y1_N3
maxii_lcell \lkm|LessThan1~1 (
// Equation(s):
// \lkm|LessThan1~1_combout  = ((!\lkm|counter [5] & ((\lkm|LessThan1~0_combout ) # (!\lkm|counter [4])))) # (!\lkm|counter [6])

	.clk(gnd),
	.dataa(\lkm|counter [4]),
	.datab(\lkm|counter [5]),
	.datac(\lkm|counter [6]),
	.datad(\lkm|LessThan1~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lkm|LessThan1~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lkm|LessThan1~1 .lut_mask = "3f1f";
defparam \lkm|LessThan1~1 .operation_mode = "normal";
defparam \lkm|LessThan1~1 .output_mode = "comb_only";
defparam \lkm|LessThan1~1 .register_cascade_mode = "off";
defparam \lkm|LessThan1~1 .sum_lutc_input = "datac";
defparam \lkm|LessThan1~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y1_N0
maxii_lcell \lkm|LessThan1~2 (
// Equation(s):
// \lkm|LessThan1~2_combout  = (!\lkm|counter [7] & (!\lkm|counter [8] & (!\lkm|counter [9] & \lkm|LessThan1~1_combout )))

	.clk(gnd),
	.dataa(\lkm|counter [7]),
	.datab(\lkm|counter [8]),
	.datac(\lkm|counter [9]),
	.datad(\lkm|LessThan1~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lkm|LessThan1~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lkm|LessThan1~2 .lut_mask = "0100";
defparam \lkm|LessThan1~2 .operation_mode = "normal";
defparam \lkm|LessThan1~2 .output_mode = "comb_only";
defparam \lkm|LessThan1~2 .register_cascade_mode = "off";
defparam \lkm|LessThan1~2 .sum_lutc_input = "datac";
defparam \lkm|LessThan1~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y1_N1
maxii_lcell \lkm|LessThan1~3 (
// Equation(s):
// \lkm|LessThan1~3_combout  = (\lkm|counter [12] & ((\lkm|counter [11]) # ((\lkm|counter [10] & !\lkm|LessThan1~2_combout ))))

	.clk(gnd),
	.dataa(\lkm|counter [10]),
	.datab(\lkm|counter [11]),
	.datac(\lkm|counter [12]),
	.datad(\lkm|LessThan1~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lkm|LessThan1~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lkm|LessThan1~3 .lut_mask = "c0e0";
defparam \lkm|LessThan1~3 .operation_mode = "normal";
defparam \lkm|LessThan1~3 .output_mode = "comb_only";
defparam \lkm|LessThan1~3 .register_cascade_mode = "off";
defparam \lkm|LessThan1~3 .sum_lutc_input = "datac";
defparam \lkm|LessThan1~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y1_N3
maxii_lcell \lkm|bit_index[0]~1 (
// Equation(s):
// \lkm|bit_index[0]~1_combout  = (((\lkm|LessThan1~3_combout ) # (!\lkm|state.DATA~regout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\lkm|state.DATA~regout ),
	.datad(\lkm|LessThan1~3_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lkm|bit_index[0]~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lkm|bit_index[0]~1 .lut_mask = "ff0f";
defparam \lkm|bit_index[0]~1 .operation_mode = "normal";
defparam \lkm|bit_index[0]~1 .output_mode = "comb_only";
defparam \lkm|bit_index[0]~1 .register_cascade_mode = "off";
defparam \lkm|bit_index[0]~1 .sum_lutc_input = "datac";
defparam \lkm|bit_index[0]~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y1_N1
maxii_lcell \lkm|bit_index[0] (
// Equation(s):
// \lkm|bit_index [0] = DFFEAS(((!\lkm|bit_index [0] & (\lkm|state.DATA~regout ))), GLOBAL(\clk~combout ), VCC, , \lkm|bit_index[0]~1_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\lkm|bit_index [0]),
	.datac(\lkm|state.DATA~regout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\lkm|bit_index[0]~1_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\lkm|bit_index [0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lkm|bit_index[0] .lut_mask = "3030";
defparam \lkm|bit_index[0] .operation_mode = "normal";
defparam \lkm|bit_index[0] .output_mode = "reg_only";
defparam \lkm|bit_index[0] .register_cascade_mode = "off";
defparam \lkm|bit_index[0] .sum_lutc_input = "datac";
defparam \lkm|bit_index[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y1_N7
maxii_lcell \lkm|bit_index[1] (
// Equation(s):
// \lkm|bit_index [1] = DFFEAS((\lkm|state.DATA~regout  & (\lkm|bit_index [0] $ ((\lkm|bit_index [1])))), GLOBAL(\clk~combout ), VCC, , \lkm|bit_index[0]~1_combout , , , , )

	.clk(\clk~combout ),
	.dataa(\lkm|state.DATA~regout ),
	.datab(\lkm|bit_index [0]),
	.datac(\lkm|bit_index [1]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\lkm|bit_index[0]~1_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\lkm|bit_index [1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lkm|bit_index[1] .lut_mask = "2828";
defparam \lkm|bit_index[1] .operation_mode = "normal";
defparam \lkm|bit_index[1] .output_mode = "reg_only";
defparam \lkm|bit_index[1] .register_cascade_mode = "off";
defparam \lkm|bit_index[1] .sum_lutc_input = "datac";
defparam \lkm|bit_index[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y1_N8
maxii_lcell \lkm|bit_index[2] (
// Equation(s):
// \lkm|bit_index [2] = DFFEAS((\lkm|state.DATA~regout  & (\lkm|bit_index [2] $ (((\lkm|bit_index [0] & \lkm|bit_index [1]))))), GLOBAL(\clk~combout ), VCC, , \lkm|bit_index[0]~1_combout , , , , )

	.clk(\clk~combout ),
	.dataa(\lkm|state.DATA~regout ),
	.datab(\lkm|bit_index [0]),
	.datac(\lkm|bit_index [1]),
	.datad(\lkm|bit_index [2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\lkm|bit_index[0]~1_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\lkm|bit_index [2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lkm|bit_index[2] .lut_mask = "2a80";
defparam \lkm|bit_index[2] .operation_mode = "normal";
defparam \lkm|bit_index[2] .output_mode = "reg_only";
defparam \lkm|bit_index[2] .register_cascade_mode = "off";
defparam \lkm|bit_index[2] .sum_lutc_input = "datac";
defparam \lkm|bit_index[2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y1_N9
maxii_lcell \lkm|state.STOP~0 (
// Equation(s):
// \lkm|state.STOP~0_combout  = (\lkm|bit_index [2] & (\lkm|bit_index [1] & (\lkm|bit_index [0])))

	.clk(gnd),
	.dataa(\lkm|bit_index [2]),
	.datab(\lkm|bit_index [1]),
	.datac(\lkm|bit_index [0]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lkm|state.STOP~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lkm|state.STOP~0 .lut_mask = "8080";
defparam \lkm|state.STOP~0 .operation_mode = "normal";
defparam \lkm|state.STOP~0 .output_mode = "comb_only";
defparam \lkm|state.STOP~0 .register_cascade_mode = "off";
defparam \lkm|state.STOP~0 .sum_lutc_input = "datac";
defparam \lkm|state.STOP~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y1_N0
maxii_lcell \lkm|state.START (
// Equation(s):
// \lkm|state.START~regout  = DFFEAS((\reg_txkjnn|byte_sent~regout  & (((\lkm|state.START~regout  & !\lkm|LessThan1~3_combout )) # (!\lkm|state.00~regout ))) # (!\reg_txkjnn|byte_sent~regout  & (((\lkm|state.START~regout  & !\lkm|LessThan1~3_combout )))), 
// GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\reg_txkjnn|byte_sent~regout ),
	.datab(\lkm|state.00~regout ),
	.datac(\lkm|state.START~regout ),
	.datad(\lkm|LessThan1~3_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\lkm|state.START~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lkm|state.START .lut_mask = "22f2";
defparam \lkm|state.START .operation_mode = "normal";
defparam \lkm|state.START .output_mode = "reg_only";
defparam \lkm|state.START .register_cascade_mode = "off";
defparam \lkm|state.START .sum_lutc_input = "datac";
defparam \lkm|state.START .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y1_N4
maxii_lcell \lkm|state.DATA (
// Equation(s):
// \lkm|state.DATA~regout  = DFFEAS((\lkm|LessThan1~3_combout  & ((\lkm|state.START~regout ) # ((\lkm|state.DATA~regout  & !\lkm|state.STOP~0_combout )))) # (!\lkm|LessThan1~3_combout  & (\lkm|state.DATA~regout )), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\lkm|state.DATA~regout ),
	.datab(\lkm|state.STOP~0_combout ),
	.datac(\lkm|state.START~regout ),
	.datad(\lkm|LessThan1~3_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\lkm|state.DATA~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lkm|state.DATA .lut_mask = "f2aa";
defparam \lkm|state.DATA .operation_mode = "normal";
defparam \lkm|state.DATA .output_mode = "reg_only";
defparam \lkm|state.DATA .register_cascade_mode = "off";
defparam \lkm|state.DATA .sum_lutc_input = "datac";
defparam \lkm|state.DATA .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y1_N2
maxii_lcell \lkm|state.STOP (
// Equation(s):
// \lkm|state.STOP~regout  = DFFEAS((\lkm|LessThan1~3_combout  & (((\lkm|state.DATA~regout  & \lkm|state.STOP~0_combout )))) # (!\lkm|LessThan1~3_combout  & (\lkm|state.STOP~regout )), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\lkm|LessThan1~3_combout ),
	.datab(\lkm|state.STOP~regout ),
	.datac(\lkm|state.DATA~regout ),
	.datad(\lkm|state.STOP~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\lkm|state.STOP~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lkm|state.STOP .lut_mask = "e444";
defparam \lkm|state.STOP .operation_mode = "normal";
defparam \lkm|state.STOP .output_mode = "reg_only";
defparam \lkm|state.STOP .register_cascade_mode = "off";
defparam \lkm|state.STOP .sum_lutc_input = "datac";
defparam \lkm|state.STOP .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N8
maxii_lcell \lkm|done (
// Equation(s):
// \lkm|done~regout  = DFFEAS(((\lkm|state.STOP~regout  & ((\lkm|LessThan1~3_combout ) # (\lkm|done~regout )))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\lkm|state.STOP~regout ),
	.datac(\lkm|LessThan1~3_combout ),
	.datad(\lkm|done~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\lkm|done~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lkm|done .lut_mask = "ccc0";
defparam \lkm|done .operation_mode = "normal";
defparam \lkm|done .output_mode = "reg_only";
defparam \lkm|done .register_cascade_mode = "off";
defparam \lkm|done .sum_lutc_input = "datac";
defparam \lkm|done .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y3_N4
maxii_lcell \reg_rx|state.00 (
// Equation(s):
// \reg_rx|state.00~regout  = DFFEAS((\reg_rx|state.IDLE_2BYTE~regout ) # (((\rx|data_avail~regout ) # (\reg_rx|state.ADD_ADDRESS~regout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\reg_rx|state.IDLE_2BYTE~regout ),
	.datab(vcc),
	.datac(\rx|data_avail~regout ),
	.datad(\reg_rx|state.ADD_ADDRESS~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_rx|state.00~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_rx|state.00 .lut_mask = "fffa";
defparam \reg_rx|state.00 .operation_mode = "normal";
defparam \reg_rx|state.00 .output_mode = "reg_only";
defparam \reg_rx|state.00 .register_cascade_mode = "off";
defparam \reg_rx|state.00 .sum_lutc_input = "datac";
defparam \reg_rx|state.00 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y3_N8
maxii_lcell \reg_rx|state.IDLE_2BYTE (
// Equation(s):
// \reg_rx|state.IDLE_2BYTE~regout  = DFFEAS((!\rx|data_avail~regout  & (((\reg_rx|state.00~regout  & !\reg_rx|state.ADD_COMMAND~regout )))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\rx|data_avail~regout ),
	.datab(vcc),
	.datac(\reg_rx|state.00~regout ),
	.datad(\reg_rx|state.ADD_COMMAND~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_rx|state.IDLE_2BYTE~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_rx|state.IDLE_2BYTE .lut_mask = "0050";
defparam \reg_rx|state.IDLE_2BYTE .operation_mode = "normal";
defparam \reg_rx|state.IDLE_2BYTE .output_mode = "reg_only";
defparam \reg_rx|state.IDLE_2BYTE .register_cascade_mode = "off";
defparam \reg_rx|state.IDLE_2BYTE .sum_lutc_input = "datac";
defparam \reg_rx|state.IDLE_2BYTE .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y3_N9
maxii_lcell \reg_rx|state.ADD_ADDRESS (
// Equation(s):
// \reg_rx|state.ADD_ADDRESS~regout  = DFFEAS((!\reg_rx|state.IDLE_2BYTE~regout  & (((\rx|data_avail~regout  & !\reg_rx|state.ADD_COMMAND~regout )))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\reg_rx|state.IDLE_2BYTE~regout ),
	.datab(vcc),
	.datac(\rx|data_avail~regout ),
	.datad(\reg_rx|state.ADD_COMMAND~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_rx|state.ADD_ADDRESS~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_rx|state.ADD_ADDRESS .lut_mask = "0050";
defparam \reg_rx|state.ADD_ADDRESS .operation_mode = "normal";
defparam \reg_rx|state.ADD_ADDRESS .output_mode = "reg_only";
defparam \reg_rx|state.ADD_ADDRESS .register_cascade_mode = "off";
defparam \reg_rx|state.ADD_ADDRESS .sum_lutc_input = "datac";
defparam \reg_rx|state.ADD_ADDRESS .synch_mode = "off";
// synopsys translate_on

// Location: PIN_53,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \input_rx~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\input_rx~combout ),
	.padio(input_rx));
// synopsys translate_off
defparam \input_rx~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X2_Y2_N2
maxii_lcell \rx|data_serial_buffer (
// Equation(s):
// \rx|data_serial_buffer~regout  = DFFEAS((((!\input_rx~combout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\input_rx~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\rx|data_serial_buffer~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|data_serial_buffer .lut_mask = "00ff";
defparam \rx|data_serial_buffer .operation_mode = "normal";
defparam \rx|data_serial_buffer .output_mode = "reg_only";
defparam \rx|data_serial_buffer .register_cascade_mode = "off";
defparam \rx|data_serial_buffer .sum_lutc_input = "datac";
defparam \rx|data_serial_buffer .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y2_N0
maxii_lcell \rx|rx_data (
// Equation(s):
// \rx|rx_data~regout  = DFFEAS((((\rx|data_serial_buffer~regout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\rx|data_serial_buffer~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\rx|rx_data~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|rx_data .lut_mask = "ff00";
defparam \rx|rx_data .operation_mode = "normal";
defparam \rx|rx_data .output_mode = "reg_only";
defparam \rx|rx_data .register_cascade_mode = "off";
defparam \rx|rx_data .sum_lutc_input = "datac";
defparam \rx|rx_data .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y2_N2
maxii_lcell \rx|counter[3]~26 (
// Equation(s):
// \rx|counter[3]~26_combout  = ((!\rx|state.DATA~regout  & ((!\rx|state.STOP~regout ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(\rx|state.DATA~regout ),
	.datac(vcc),
	.datad(\rx|state.STOP~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\rx|counter[3]~26_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|counter[3]~26 .lut_mask = "0033";
defparam \rx|counter[3]~26 .operation_mode = "normal";
defparam \rx|counter[3]~26 .output_mode = "comb_only";
defparam \rx|counter[3]~26 .register_cascade_mode = "off";
defparam \rx|counter[3]~26 .sum_lutc_input = "datac";
defparam \rx|counter[3]~26 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y2_N4
maxii_lcell \rx|counter[0] (
// Equation(s):
// \rx|counter [0] = DFFEAS((!\rx|counter [0]), GLOBAL(\clk~combout ), VCC, , , , , \rx|counter[3]~27_combout , )
// \rx|counter[0]~17  = CARRY((\rx|counter [0]))

	.clk(\clk~combout ),
	.dataa(\rx|counter [0]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\rx|counter[3]~27_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\rx|counter [0]),
	.cout(\rx|counter[0]~17 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|counter[0] .lut_mask = "55aa";
defparam \rx|counter[0] .operation_mode = "arithmetic";
defparam \rx|counter[0] .output_mode = "reg_only";
defparam \rx|counter[0] .register_cascade_mode = "off";
defparam \rx|counter[0] .sum_lutc_input = "datac";
defparam \rx|counter[0] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X2_Y2_N5
maxii_lcell \rx|counter[1] (
// Equation(s):
// \rx|counter [1] = DFFEAS(\rx|counter [1] $ ((((\rx|counter[0]~17 )))), GLOBAL(\clk~combout ), VCC, , , , , \rx|counter[3]~27_combout , )
// \rx|counter[1]~19  = CARRY(((!\rx|counter[0]~17 )) # (!\rx|counter [1]))
// \rx|counter[1]~19COUT1_29  = CARRY(((!\rx|counter[0]~17 )) # (!\rx|counter [1]))

	.clk(\clk~combout ),
	.dataa(\rx|counter [1]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\rx|counter[3]~27_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\rx|counter[0]~17 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\rx|counter [1]),
	.cout(),
	.cout0(\rx|counter[1]~19 ),
	.cout1(\rx|counter[1]~19COUT1_29 ));
// synopsys translate_off
defparam \rx|counter[1] .cin_used = "true";
defparam \rx|counter[1] .lut_mask = "5a5f";
defparam \rx|counter[1] .operation_mode = "arithmetic";
defparam \rx|counter[1] .output_mode = "reg_only";
defparam \rx|counter[1] .register_cascade_mode = "off";
defparam \rx|counter[1] .sum_lutc_input = "cin";
defparam \rx|counter[1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X2_Y2_N6
maxii_lcell \rx|counter[2] (
// Equation(s):
// \rx|counter [2] = DFFEAS(\rx|counter [2] $ ((((!(!\rx|counter[0]~17  & \rx|counter[1]~19 ) # (\rx|counter[0]~17  & \rx|counter[1]~19COUT1_29 ))))), GLOBAL(\clk~combout ), VCC, , , , , \rx|counter[3]~27_combout , )
// \rx|counter[2]~15  = CARRY((\rx|counter [2] & ((!\rx|counter[1]~19 ))))
// \rx|counter[2]~15COUT1_30  = CARRY((\rx|counter [2] & ((!\rx|counter[1]~19COUT1_29 ))))

	.clk(\clk~combout ),
	.dataa(\rx|counter [2]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\rx|counter[3]~27_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\rx|counter[0]~17 ),
	.cin0(\rx|counter[1]~19 ),
	.cin1(\rx|counter[1]~19COUT1_29 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\rx|counter [2]),
	.cout(),
	.cout0(\rx|counter[2]~15 ),
	.cout1(\rx|counter[2]~15COUT1_30 ));
// synopsys translate_off
defparam \rx|counter[2] .cin0_used = "true";
defparam \rx|counter[2] .cin1_used = "true";
defparam \rx|counter[2] .cin_used = "true";
defparam \rx|counter[2] .lut_mask = "a50a";
defparam \rx|counter[2] .operation_mode = "arithmetic";
defparam \rx|counter[2] .output_mode = "reg_only";
defparam \rx|counter[2] .register_cascade_mode = "off";
defparam \rx|counter[2] .sum_lutc_input = "cin";
defparam \rx|counter[2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X2_Y2_N7
maxii_lcell \rx|counter[3] (
// Equation(s):
// \rx|counter [3] = DFFEAS(\rx|counter [3] $ (((((!\rx|counter[0]~17  & \rx|counter[2]~15 ) # (\rx|counter[0]~17  & \rx|counter[2]~15COUT1_30 ))))), GLOBAL(\clk~combout ), VCC, , , , , \rx|counter[3]~27_combout , )
// \rx|counter[3]~21  = CARRY(((!\rx|counter[2]~15 )) # (!\rx|counter [3]))
// \rx|counter[3]~21COUT1_31  = CARRY(((!\rx|counter[2]~15COUT1_30 )) # (!\rx|counter [3]))

	.clk(\clk~combout ),
	.dataa(\rx|counter [3]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\rx|counter[3]~27_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\rx|counter[0]~17 ),
	.cin0(\rx|counter[2]~15 ),
	.cin1(\rx|counter[2]~15COUT1_30 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\rx|counter [3]),
	.cout(),
	.cout0(\rx|counter[3]~21 ),
	.cout1(\rx|counter[3]~21COUT1_31 ));
// synopsys translate_off
defparam \rx|counter[3] .cin0_used = "true";
defparam \rx|counter[3] .cin1_used = "true";
defparam \rx|counter[3] .cin_used = "true";
defparam \rx|counter[3] .lut_mask = "5a5f";
defparam \rx|counter[3] .operation_mode = "arithmetic";
defparam \rx|counter[3] .output_mode = "reg_only";
defparam \rx|counter[3] .register_cascade_mode = "off";
defparam \rx|counter[3] .sum_lutc_input = "cin";
defparam \rx|counter[3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X2_Y2_N8
maxii_lcell \rx|counter[4] (
// Equation(s):
// \rx|counter [4] = DFFEAS((\rx|counter [4] $ ((!(!\rx|counter[0]~17  & \rx|counter[3]~21 ) # (\rx|counter[0]~17  & \rx|counter[3]~21COUT1_31 )))), GLOBAL(\clk~combout ), VCC, , , , , \rx|counter[3]~27_combout , )
// \rx|counter[4]~9  = CARRY(((\rx|counter [4] & !\rx|counter[3]~21 )))
// \rx|counter[4]~9COUT1_32  = CARRY(((\rx|counter [4] & !\rx|counter[3]~21COUT1_31 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\rx|counter [4]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\rx|counter[3]~27_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\rx|counter[0]~17 ),
	.cin0(\rx|counter[3]~21 ),
	.cin1(\rx|counter[3]~21COUT1_31 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\rx|counter [4]),
	.cout(),
	.cout0(\rx|counter[4]~9 ),
	.cout1(\rx|counter[4]~9COUT1_32 ));
// synopsys translate_off
defparam \rx|counter[4] .cin0_used = "true";
defparam \rx|counter[4] .cin1_used = "true";
defparam \rx|counter[4] .cin_used = "true";
defparam \rx|counter[4] .lut_mask = "c30c";
defparam \rx|counter[4] .operation_mode = "arithmetic";
defparam \rx|counter[4] .output_mode = "reg_only";
defparam \rx|counter[4] .register_cascade_mode = "off";
defparam \rx|counter[4] .sum_lutc_input = "cin";
defparam \rx|counter[4] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X2_Y2_N9
maxii_lcell \rx|counter[5] (
// Equation(s):
// \rx|counter [5] = DFFEAS(\rx|counter [5] $ (((((!\rx|counter[0]~17  & \rx|counter[4]~9 ) # (\rx|counter[0]~17  & \rx|counter[4]~9COUT1_32 ))))), GLOBAL(\clk~combout ), VCC, , , , , \rx|counter[3]~27_combout , )
// \rx|counter[5]~11  = CARRY(((!\rx|counter[4]~9COUT1_32 )) # (!\rx|counter [5]))

	.clk(\clk~combout ),
	.dataa(\rx|counter [5]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\rx|counter[3]~27_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\rx|counter[0]~17 ),
	.cin0(\rx|counter[4]~9 ),
	.cin1(\rx|counter[4]~9COUT1_32 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\rx|counter [5]),
	.cout(\rx|counter[5]~11 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|counter[5] .cin0_used = "true";
defparam \rx|counter[5] .cin1_used = "true";
defparam \rx|counter[5] .cin_used = "true";
defparam \rx|counter[5] .lut_mask = "5a5f";
defparam \rx|counter[5] .operation_mode = "arithmetic";
defparam \rx|counter[5] .output_mode = "reg_only";
defparam \rx|counter[5] .register_cascade_mode = "off";
defparam \rx|counter[5] .sum_lutc_input = "cin";
defparam \rx|counter[5] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y2_N0
maxii_lcell \rx|counter[6] (
// Equation(s):
// \rx|counter [6] = DFFEAS((\rx|counter [6] $ ((!\rx|counter[5]~11 ))), GLOBAL(\clk~combout ), VCC, , , , , \rx|counter[3]~27_combout , )
// \rx|counter[6]~13  = CARRY(((\rx|counter [6] & !\rx|counter[5]~11 )))
// \rx|counter[6]~13COUT1_33  = CARRY(((\rx|counter [6] & !\rx|counter[5]~11 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\rx|counter [6]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\rx|counter[3]~27_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\rx|counter[5]~11 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\rx|counter [6]),
	.cout(),
	.cout0(\rx|counter[6]~13 ),
	.cout1(\rx|counter[6]~13COUT1_33 ));
// synopsys translate_off
defparam \rx|counter[6] .cin_used = "true";
defparam \rx|counter[6] .lut_mask = "c30c";
defparam \rx|counter[6] .operation_mode = "arithmetic";
defparam \rx|counter[6] .output_mode = "reg_only";
defparam \rx|counter[6] .register_cascade_mode = "off";
defparam \rx|counter[6] .sum_lutc_input = "cin";
defparam \rx|counter[6] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y2_N1
maxii_lcell \rx|counter[7] (
// Equation(s):
// \rx|counter [7] = DFFEAS((\rx|counter [7] $ (((!\rx|counter[5]~11  & \rx|counter[6]~13 ) # (\rx|counter[5]~11  & \rx|counter[6]~13COUT1_33 )))), GLOBAL(\clk~combout ), VCC, , , , , \rx|counter[3]~27_combout , )
// \rx|counter[7]~3  = CARRY(((!\rx|counter[6]~13 ) # (!\rx|counter [7])))
// \rx|counter[7]~3COUT1_34  = CARRY(((!\rx|counter[6]~13COUT1_33 ) # (!\rx|counter [7])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\rx|counter [7]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\rx|counter[3]~27_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\rx|counter[5]~11 ),
	.cin0(\rx|counter[6]~13 ),
	.cin1(\rx|counter[6]~13COUT1_33 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\rx|counter [7]),
	.cout(),
	.cout0(\rx|counter[7]~3 ),
	.cout1(\rx|counter[7]~3COUT1_34 ));
// synopsys translate_off
defparam \rx|counter[7] .cin0_used = "true";
defparam \rx|counter[7] .cin1_used = "true";
defparam \rx|counter[7] .cin_used = "true";
defparam \rx|counter[7] .lut_mask = "3c3f";
defparam \rx|counter[7] .operation_mode = "arithmetic";
defparam \rx|counter[7] .output_mode = "reg_only";
defparam \rx|counter[7] .register_cascade_mode = "off";
defparam \rx|counter[7] .sum_lutc_input = "cin";
defparam \rx|counter[7] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y2_N2
maxii_lcell \rx|counter[8] (
// Equation(s):
// \rx|counter [8] = DFFEAS(\rx|counter [8] $ ((((!(!\rx|counter[5]~11  & \rx|counter[7]~3 ) # (\rx|counter[5]~11  & \rx|counter[7]~3COUT1_34 ))))), GLOBAL(\clk~combout ), VCC, , , , , \rx|counter[3]~27_combout , )
// \rx|counter[8]~5  = CARRY((\rx|counter [8] & ((!\rx|counter[7]~3 ))))
// \rx|counter[8]~5COUT1_35  = CARRY((\rx|counter [8] & ((!\rx|counter[7]~3COUT1_34 ))))

	.clk(\clk~combout ),
	.dataa(\rx|counter [8]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\rx|counter[3]~27_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\rx|counter[5]~11 ),
	.cin0(\rx|counter[7]~3 ),
	.cin1(\rx|counter[7]~3COUT1_34 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\rx|counter [8]),
	.cout(),
	.cout0(\rx|counter[8]~5 ),
	.cout1(\rx|counter[8]~5COUT1_35 ));
// synopsys translate_off
defparam \rx|counter[8] .cin0_used = "true";
defparam \rx|counter[8] .cin1_used = "true";
defparam \rx|counter[8] .cin_used = "true";
defparam \rx|counter[8] .lut_mask = "a50a";
defparam \rx|counter[8] .operation_mode = "arithmetic";
defparam \rx|counter[8] .output_mode = "reg_only";
defparam \rx|counter[8] .register_cascade_mode = "off";
defparam \rx|counter[8] .sum_lutc_input = "cin";
defparam \rx|counter[8] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y2_N3
maxii_lcell \rx|counter[9] (
// Equation(s):
// \rx|counter [9] = DFFEAS(\rx|counter [9] $ (((((!\rx|counter[5]~11  & \rx|counter[8]~5 ) # (\rx|counter[5]~11  & \rx|counter[8]~5COUT1_35 ))))), GLOBAL(\clk~combout ), VCC, , , , , \rx|counter[3]~27_combout , )
// \rx|counter[9]~7  = CARRY(((!\rx|counter[8]~5 )) # (!\rx|counter [9]))
// \rx|counter[9]~7COUT1_36  = CARRY(((!\rx|counter[8]~5COUT1_35 )) # (!\rx|counter [9]))

	.clk(\clk~combout ),
	.dataa(\rx|counter [9]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\rx|counter[3]~27_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\rx|counter[5]~11 ),
	.cin0(\rx|counter[8]~5 ),
	.cin1(\rx|counter[8]~5COUT1_35 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\rx|counter [9]),
	.cout(),
	.cout0(\rx|counter[9]~7 ),
	.cout1(\rx|counter[9]~7COUT1_36 ));
// synopsys translate_off
defparam \rx|counter[9] .cin0_used = "true";
defparam \rx|counter[9] .cin1_used = "true";
defparam \rx|counter[9] .cin_used = "true";
defparam \rx|counter[9] .lut_mask = "5a5f";
defparam \rx|counter[9] .operation_mode = "arithmetic";
defparam \rx|counter[9] .output_mode = "reg_only";
defparam \rx|counter[9] .register_cascade_mode = "off";
defparam \rx|counter[9] .sum_lutc_input = "cin";
defparam \rx|counter[9] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y2_N4
maxii_lcell \rx|counter[10] (
// Equation(s):
// \rx|counter [10] = DFFEAS(\rx|counter [10] $ ((((!(!\rx|counter[5]~11  & \rx|counter[9]~7 ) # (\rx|counter[5]~11  & \rx|counter[9]~7COUT1_36 ))))), GLOBAL(\clk~combout ), VCC, , , , , \rx|counter[3]~27_combout , )
// \rx|counter[10]~23  = CARRY((\rx|counter [10] & ((!\rx|counter[9]~7COUT1_36 ))))

	.clk(\clk~combout ),
	.dataa(\rx|counter [10]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\rx|counter[3]~27_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\rx|counter[5]~11 ),
	.cin0(\rx|counter[9]~7 ),
	.cin1(\rx|counter[9]~7COUT1_36 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\rx|counter [10]),
	.cout(\rx|counter[10]~23 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|counter[10] .cin0_used = "true";
defparam \rx|counter[10] .cin1_used = "true";
defparam \rx|counter[10] .cin_used = "true";
defparam \rx|counter[10] .lut_mask = "a50a";
defparam \rx|counter[10] .operation_mode = "arithmetic";
defparam \rx|counter[10] .output_mode = "reg_only";
defparam \rx|counter[10] .register_cascade_mode = "off";
defparam \rx|counter[10] .sum_lutc_input = "cin";
defparam \rx|counter[10] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y2_N5
maxii_lcell \rx|counter[11] (
// Equation(s):
// \rx|counter [11] = DFFEAS(\rx|counter [11] $ ((((\rx|counter[10]~23 )))), GLOBAL(\clk~combout ), VCC, , , , , \rx|counter[3]~27_combout , )
// \rx|counter[11]~1  = CARRY(((!\rx|counter[10]~23 )) # (!\rx|counter [11]))
// \rx|counter[11]~1COUT1_37  = CARRY(((!\rx|counter[10]~23 )) # (!\rx|counter [11]))

	.clk(\clk~combout ),
	.dataa(\rx|counter [11]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\rx|counter[3]~27_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\rx|counter[10]~23 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\rx|counter [11]),
	.cout(),
	.cout0(\rx|counter[11]~1 ),
	.cout1(\rx|counter[11]~1COUT1_37 ));
// synopsys translate_off
defparam \rx|counter[11] .cin_used = "true";
defparam \rx|counter[11] .lut_mask = "5a5f";
defparam \rx|counter[11] .operation_mode = "arithmetic";
defparam \rx|counter[11] .output_mode = "reg_only";
defparam \rx|counter[11] .register_cascade_mode = "off";
defparam \rx|counter[11] .sum_lutc_input = "cin";
defparam \rx|counter[11] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y2_N9
maxii_lcell \rx|LessThan2~0 (
// Equation(s):
// \rx|LessThan2~0_combout  = (!\rx|counter [9] & (!\rx|counter [7] & (!\rx|counter [11] & !\rx|counter [8])))

	.clk(gnd),
	.dataa(\rx|counter [9]),
	.datab(\rx|counter [7]),
	.datac(\rx|counter [11]),
	.datad(\rx|counter [8]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\rx|LessThan2~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|LessThan2~0 .lut_mask = "0001";
defparam \rx|LessThan2~0 .operation_mode = "normal";
defparam \rx|LessThan2~0 .output_mode = "comb_only";
defparam \rx|LessThan2~0 .register_cascade_mode = "off";
defparam \rx|LessThan2~0 .sum_lutc_input = "datac";
defparam \rx|LessThan2~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y2_N1
maxii_lcell \rx|LessThan2~2 (
// Equation(s):
// \rx|LessThan2~2_combout  = (!\rx|counter [3] & (((!\rx|counter [0]) # (!\rx|counter [2])) # (!\rx|counter [1])))

	.clk(gnd),
	.dataa(\rx|counter [1]),
	.datab(\rx|counter [3]),
	.datac(\rx|counter [2]),
	.datad(\rx|counter [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\rx|LessThan2~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|LessThan2~2 .lut_mask = "1333";
defparam \rx|LessThan2~2 .operation_mode = "normal";
defparam \rx|LessThan2~2 .output_mode = "comb_only";
defparam \rx|LessThan2~2 .register_cascade_mode = "off";
defparam \rx|LessThan2~2 .sum_lutc_input = "datac";
defparam \rx|LessThan2~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N2
maxii_lcell \rx|LessThan2~1 (
// Equation(s):
// \rx|LessThan2~1_combout  = (((!\rx|counter [4] & !\rx|counter [5])) # (!\rx|counter [6]))

	.clk(gnd),
	.dataa(vcc),
	.datab(\rx|counter [4]),
	.datac(\rx|counter [6]),
	.datad(\rx|counter [5]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\rx|LessThan2~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|LessThan2~1 .lut_mask = "0f3f";
defparam \rx|LessThan2~1 .operation_mode = "normal";
defparam \rx|LessThan2~1 .output_mode = "comb_only";
defparam \rx|LessThan2~1 .register_cascade_mode = "off";
defparam \rx|LessThan2~1 .sum_lutc_input = "datac";
defparam \rx|LessThan2~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N3
maxii_lcell \rx|LessThan2~3 (
// Equation(s):
// \rx|LessThan2~3_combout  = (\rx|LessThan2~0_combout  & ((\rx|LessThan2~1_combout ) # ((!\rx|counter [5] & \rx|LessThan2~2_combout ))))

	.clk(gnd),
	.dataa(\rx|counter [5]),
	.datab(\rx|LessThan2~0_combout ),
	.datac(\rx|LessThan2~2_combout ),
	.datad(\rx|LessThan2~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\rx|LessThan2~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|LessThan2~3 .lut_mask = "cc40";
defparam \rx|LessThan2~3 .operation_mode = "normal";
defparam \rx|LessThan2~3 .output_mode = "comb_only";
defparam \rx|LessThan2~3 .register_cascade_mode = "off";
defparam \rx|LessThan2~3 .sum_lutc_input = "datac";
defparam \rx|LessThan2~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N0
maxii_lcell \rx|LessThan2~4 (
// Equation(s):
// \rx|LessThan2~4_combout  = ((\rx|LessThan2~3_combout ) # ((!\rx|counter [11] & !\rx|counter [10]))) # (!\rx|counter [12])

	.clk(gnd),
	.dataa(\rx|counter [11]),
	.datab(\rx|counter [12]),
	.datac(\rx|counter [10]),
	.datad(\rx|LessThan2~3_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\rx|LessThan2~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|LessThan2~4 .lut_mask = "ff37";
defparam \rx|LessThan2~4 .operation_mode = "normal";
defparam \rx|LessThan2~4 .output_mode = "comb_only";
defparam \rx|LessThan2~4 .register_cascade_mode = "off";
defparam \rx|LessThan2~4 .sum_lutc_input = "datac";
defparam \rx|LessThan2~4 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N1
maxii_lcell \rx|counter[3]~27 (
// Equation(s):
// \rx|counter[3]~27_combout  = \rx|state.00~regout  $ (\rx|Selector15~0_combout  $ (((\rx|counter[3]~26_combout ) # (\rx|LessThan2~4_combout ))))

	.clk(gnd),
	.dataa(\rx|state.00~regout ),
	.datab(\rx|counter[3]~26_combout ),
	.datac(\rx|Selector15~0_combout ),
	.datad(\rx|LessThan2~4_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\rx|counter[3]~27_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|counter[3]~27 .lut_mask = "a596";
defparam \rx|counter[3]~27 .operation_mode = "normal";
defparam \rx|counter[3]~27 .output_mode = "comb_only";
defparam \rx|counter[3]~27 .register_cascade_mode = "off";
defparam \rx|counter[3]~27 .sum_lutc_input = "datac";
defparam \rx|counter[3]~27 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y2_N6
maxii_lcell \rx|counter[12] (
// Equation(s):
// \rx|counter [12] = DFFEAS((((!\rx|counter[10]~23  & \rx|counter[11]~1 ) # (\rx|counter[10]~23  & \rx|counter[11]~1COUT1_37 ) $ (!\rx|counter [12]))), GLOBAL(\clk~combout ), VCC, , , , , \rx|counter[3]~27_combout , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\rx|counter [12]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\rx|counter[3]~27_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\rx|counter[10]~23 ),
	.cin0(\rx|counter[11]~1 ),
	.cin1(\rx|counter[11]~1COUT1_37 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\rx|counter [12]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|counter[12] .cin0_used = "true";
defparam \rx|counter[12] .cin1_used = "true";
defparam \rx|counter[12] .cin_used = "true";
defparam \rx|counter[12] .lut_mask = "f00f";
defparam \rx|counter[12] .operation_mode = "normal";
defparam \rx|counter[12] .output_mode = "reg_only";
defparam \rx|counter[12] .register_cascade_mode = "off";
defparam \rx|counter[12] .sum_lutc_input = "cin";
defparam \rx|counter[12] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y2_N7
maxii_lcell \rx|Equal0~2 (
// Equation(s):
// \rx|Equal0~2_combout  = (\rx|counter [11] & (!\rx|counter [6] & (!\rx|counter [10] & \rx|counter [9])))

	.clk(gnd),
	.dataa(\rx|counter [11]),
	.datab(\rx|counter [6]),
	.datac(\rx|counter [10]),
	.datad(\rx|counter [9]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\rx|Equal0~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|Equal0~2 .lut_mask = "0200";
defparam \rx|Equal0~2 .operation_mode = "normal";
defparam \rx|Equal0~2 .output_mode = "comb_only";
defparam \rx|Equal0~2 .register_cascade_mode = "off";
defparam \rx|Equal0~2 .sum_lutc_input = "datac";
defparam \rx|Equal0~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y2_N8
maxii_lcell \rx|Equal0~0 (
// Equation(s):
// \rx|Equal0~0_combout  = (\rx|counter [1] & (!\rx|counter [8] & (!\rx|counter [7] & \rx|counter [0])))

	.clk(gnd),
	.dataa(\rx|counter [1]),
	.datab(\rx|counter [8]),
	.datac(\rx|counter [7]),
	.datad(\rx|counter [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\rx|Equal0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|Equal0~0 .lut_mask = "0200";
defparam \rx|Equal0~0 .operation_mode = "normal";
defparam \rx|Equal0~0 .output_mode = "comb_only";
defparam \rx|Equal0~0 .register_cascade_mode = "off";
defparam \rx|Equal0~0 .sum_lutc_input = "datac";
defparam \rx|Equal0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y2_N3
maxii_lcell \rx|Equal0~1 (
// Equation(s):
// \rx|Equal0~1_combout  = (!\rx|counter [2] & (\rx|counter [5] & (\rx|counter [3] & !\rx|counter [4])))

	.clk(gnd),
	.dataa(\rx|counter [2]),
	.datab(\rx|counter [5]),
	.datac(\rx|counter [3]),
	.datad(\rx|counter [4]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\rx|Equal0~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|Equal0~1 .lut_mask = "0040";
defparam \rx|Equal0~1 .operation_mode = "normal";
defparam \rx|Equal0~1 .output_mode = "comb_only";
defparam \rx|Equal0~1 .register_cascade_mode = "off";
defparam \rx|Equal0~1 .sum_lutc_input = "datac";
defparam \rx|Equal0~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N4
maxii_lcell \rx|Equal0~3 (
// Equation(s):
// \rx|Equal0~3_combout  = (!\rx|counter [12] & (\rx|Equal0~2_combout  & (\rx|Equal0~0_combout  & \rx|Equal0~1_combout )))

	.clk(gnd),
	.dataa(\rx|counter [12]),
	.datab(\rx|Equal0~2_combout ),
	.datac(\rx|Equal0~0_combout ),
	.datad(\rx|Equal0~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\rx|Equal0~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|Equal0~3 .lut_mask = "4000";
defparam \rx|Equal0~3 .operation_mode = "normal";
defparam \rx|Equal0~3 .output_mode = "comb_only";
defparam \rx|Equal0~3 .register_cascade_mode = "off";
defparam \rx|Equal0~3 .sum_lutc_input = "datac";
defparam \rx|Equal0~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y2_N6
maxii_lcell \rx|Selector13~0 (
// Equation(s):
// \rx|Selector13~0_combout  = (((\rx|state.START~regout  & \rx|Equal0~3_combout )) # (!\rx|state.00~regout ))

	.clk(gnd),
	.dataa(vcc),
	.datab(\rx|state.START~regout ),
	.datac(\rx|state.00~regout ),
	.datad(\rx|Equal0~3_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\rx|Selector13~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|Selector13~0 .lut_mask = "cf0f";
defparam \rx|Selector13~0 .operation_mode = "normal";
defparam \rx|Selector13~0 .output_mode = "comb_only";
defparam \rx|Selector13~0 .register_cascade_mode = "off";
defparam \rx|Selector13~0 .sum_lutc_input = "datac";
defparam \rx|Selector13~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y2_N3
maxii_lcell \rx|state.00 (
// Equation(s):
// \rx|state.00~regout  = DFFEAS((\rx|rx_data~regout  & (((\rx|LessThan2~4_combout )) # (!\rx|state.STOP~regout ))) # (!\rx|rx_data~regout  & (!\rx|Selector13~0_combout  & ((\rx|LessThan2~4_combout ) # (!\rx|state.STOP~regout )))), GLOBAL(\clk~combout ), 
// VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\rx|rx_data~regout ),
	.datab(\rx|state.STOP~regout ),
	.datac(\rx|Selector13~0_combout ),
	.datad(\rx|LessThan2~4_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\rx|state.00~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|state.00 .lut_mask = "af23";
defparam \rx|state.00 .operation_mode = "normal";
defparam \rx|state.00 .output_mode = "reg_only";
defparam \rx|state.00 .register_cascade_mode = "off";
defparam \rx|state.00 .sum_lutc_input = "datac";
defparam \rx|state.00 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y2_N0
maxii_lcell \rx|state.START (
// Equation(s):
// \rx|state.START~regout  = DFFEAS((\rx|state.00~regout  & (((\rx|state.START~regout  & !\rx|Equal0~3_combout )))) # (!\rx|state.00~regout  & ((\rx|rx_data~regout ) # ((\rx|state.START~regout  & !\rx|Equal0~3_combout )))), GLOBAL(\clk~combout ), VCC, , , , 
// , , )

	.clk(\clk~combout ),
	.dataa(\rx|state.00~regout ),
	.datab(\rx|rx_data~regout ),
	.datac(\rx|state.START~regout ),
	.datad(\rx|Equal0~3_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\rx|state.START~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|state.START .lut_mask = "44f4";
defparam \rx|state.START .operation_mode = "normal";
defparam \rx|state.START .output_mode = "reg_only";
defparam \rx|state.START .register_cascade_mode = "off";
defparam \rx|state.START .sum_lutc_input = "datac";
defparam \rx|state.START .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N5
maxii_lcell \rx|Selector15~0 (
// Equation(s):
// \rx|Selector15~0_combout  = (((\rx|state.START~regout  & \rx|Equal0~3_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\rx|state.START~regout ),
	.datad(\rx|Equal0~3_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\rx|Selector15~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|Selector15~0 .lut_mask = "f000";
defparam \rx|Selector15~0 .operation_mode = "normal";
defparam \rx|Selector15~0 .output_mode = "comb_only";
defparam \rx|Selector15~0 .register_cascade_mode = "off";
defparam \rx|Selector15~0 .sum_lutc_input = "datac";
defparam \rx|Selector15~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N8
maxii_lcell \rx|LessThan2~5 (
// Equation(s):
// \rx|LessThan2~5_combout  = (((!\rx|counter [11] & !\rx|counter [10])) # (!\rx|counter [12]))

	.clk(gnd),
	.dataa(\rx|counter [11]),
	.datab(\rx|counter [10]),
	.datac(vcc),
	.datad(\rx|counter [12]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\rx|LessThan2~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|LessThan2~5 .lut_mask = "11ff";
defparam \rx|LessThan2~5 .operation_mode = "normal";
defparam \rx|LessThan2~5 .output_mode = "comb_only";
defparam \rx|LessThan2~5 .register_cascade_mode = "off";
defparam \rx|LessThan2~5 .sum_lutc_input = "datac";
defparam \rx|LessThan2~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y3_N2
maxii_lcell \rx|bit_index[0]~1 (
// Equation(s):
// \rx|bit_index[0]~1_combout  = (((!\rx|LessThan2~5_combout  & !\rx|LessThan2~3_combout )) # (!\rx|state.DATA~regout ))

	.clk(gnd),
	.dataa(vcc),
	.datab(\rx|state.DATA~regout ),
	.datac(\rx|LessThan2~5_combout ),
	.datad(\rx|LessThan2~3_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\rx|bit_index[0]~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|bit_index[0]~1 .lut_mask = "333f";
defparam \rx|bit_index[0]~1 .operation_mode = "normal";
defparam \rx|bit_index[0]~1 .output_mode = "comb_only";
defparam \rx|bit_index[0]~1 .register_cascade_mode = "off";
defparam \rx|bit_index[0]~1 .sum_lutc_input = "datac";
defparam \rx|bit_index[0]~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y3_N1
maxii_lcell \rx|bit_index[0] (
// Equation(s):
// \rx|bit_index [0] = DFFEAS(((\rx|state.DATA~regout  & ((!\rx|bit_index [0])))), GLOBAL(\clk~combout ), VCC, , \rx|bit_index[0]~1_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\rx|state.DATA~regout ),
	.datac(vcc),
	.datad(\rx|bit_index [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\rx|bit_index[0]~1_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\rx|bit_index [0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|bit_index[0] .lut_mask = "00cc";
defparam \rx|bit_index[0] .operation_mode = "normal";
defparam \rx|bit_index[0] .output_mode = "reg_only";
defparam \rx|bit_index[0] .register_cascade_mode = "off";
defparam \rx|bit_index[0] .sum_lutc_input = "datac";
defparam \rx|bit_index[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y3_N7
maxii_lcell \rx|bit_index[1] (
// Equation(s):
// \rx|bit_index [1] = DFFEAS(((\rx|state.DATA~regout  & (\rx|bit_index [1] $ (\rx|bit_index [0])))), GLOBAL(\clk~combout ), VCC, , \rx|bit_index[0]~1_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\rx|state.DATA~regout ),
	.datac(\rx|bit_index [1]),
	.datad(\rx|bit_index [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\rx|bit_index[0]~1_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\rx|bit_index [1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|bit_index[1] .lut_mask = "0cc0";
defparam \rx|bit_index[1] .operation_mode = "normal";
defparam \rx|bit_index[1] .output_mode = "reg_only";
defparam \rx|bit_index[1] .register_cascade_mode = "off";
defparam \rx|bit_index[1] .sum_lutc_input = "datac";
defparam \rx|bit_index[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y3_N6
maxii_lcell \rx|bit_index[2] (
// Equation(s):
// \rx|bit_index [2] = DFFEAS((\rx|state.DATA~regout  & (\rx|bit_index [2] $ (((\rx|bit_index [1] & \rx|bit_index [0]))))), GLOBAL(\clk~combout ), VCC, , \rx|bit_index[0]~1_combout , , , , )

	.clk(\clk~combout ),
	.dataa(\rx|bit_index [2]),
	.datab(\rx|bit_index [1]),
	.datac(\rx|state.DATA~regout ),
	.datad(\rx|bit_index [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\rx|bit_index[0]~1_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\rx|bit_index [2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|bit_index[2] .lut_mask = "60a0";
defparam \rx|bit_index[2] .operation_mode = "normal";
defparam \rx|bit_index[2] .output_mode = "reg_only";
defparam \rx|bit_index[2] .register_cascade_mode = "off";
defparam \rx|bit_index[2] .sum_lutc_input = "datac";
defparam \rx|bit_index[2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N9
maxii_lcell \rx|state.STOP~0 (
// Equation(s):
// \rx|state.STOP~0_combout  = (\rx|bit_index [0] & (\rx|bit_index [2] & (!\rx|LessThan2~4_combout  & \rx|bit_index [1])))

	.clk(gnd),
	.dataa(\rx|bit_index [0]),
	.datab(\rx|bit_index [2]),
	.datac(\rx|LessThan2~4_combout ),
	.datad(\rx|bit_index [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\rx|state.STOP~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|state.STOP~0 .lut_mask = "0800";
defparam \rx|state.STOP~0 .operation_mode = "normal";
defparam \rx|state.STOP~0 .output_mode = "comb_only";
defparam \rx|state.STOP~0 .register_cascade_mode = "off";
defparam \rx|state.STOP~0 .sum_lutc_input = "datac";
defparam \rx|state.STOP~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y2_N9
maxii_lcell \rx|state.DATA (
// Equation(s):
// \rx|state.DATA~regout  = DFFEAS((\rx|rx_data~regout  & ((\rx|Selector15~0_combout ) # ((\rx|state.DATA~regout  & !\rx|state.STOP~0_combout )))) # (!\rx|rx_data~regout  & (\rx|state.DATA~regout  & ((!\rx|state.STOP~0_combout )))), GLOBAL(\clk~combout ), 
// VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\rx|rx_data~regout ),
	.datab(\rx|state.DATA~regout ),
	.datac(\rx|Selector15~0_combout ),
	.datad(\rx|state.STOP~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\rx|state.DATA~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|state.DATA .lut_mask = "a0ec";
defparam \rx|state.DATA .operation_mode = "normal";
defparam \rx|state.DATA .output_mode = "reg_only";
defparam \rx|state.DATA .register_cascade_mode = "off";
defparam \rx|state.DATA .sum_lutc_input = "datac";
defparam \rx|state.DATA .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N7
maxii_lcell \rx|state.STOP (
// Equation(s):
// \rx|state.STOP~regout  = DFFEAS((\rx|state.DATA~regout  & ((\rx|state.STOP~0_combout ) # ((\rx|state.STOP~regout  & \rx|LessThan2~4_combout )))) # (!\rx|state.DATA~regout  & (\rx|state.STOP~regout  & (\rx|LessThan2~4_combout ))), GLOBAL(\clk~combout ), 
// VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\rx|state.DATA~regout ),
	.datab(\rx|state.STOP~regout ),
	.datac(\rx|LessThan2~4_combout ),
	.datad(\rx|state.STOP~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\rx|state.STOP~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|state.STOP .lut_mask = "eac0";
defparam \rx|state.STOP .operation_mode = "normal";
defparam \rx|state.STOP .output_mode = "reg_only";
defparam \rx|state.STOP .register_cascade_mode = "off";
defparam \rx|state.STOP .sum_lutc_input = "datac";
defparam \rx|state.STOP .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y3_N5
maxii_lcell \rx|data_avail (
// Equation(s):
// \reg_rx|buffer_data[1]~0  = ((!\reg_rx|state.ADD_ADDRESS~regout  & (E1_data_avail & !\reg_rx|state.ADD_COMMAND~regout )))
// \rx|data_avail~regout  = DFFEAS(\reg_rx|buffer_data[1]~0 , GLOBAL(\clk~combout ), VCC, , , \rx|state.STOP~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\reg_rx|state.ADD_ADDRESS~regout ),
	.datac(\rx|state.STOP~regout ),
	.datad(\reg_rx|state.ADD_COMMAND~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\reg_rx|buffer_data[1]~0 ),
	.regout(\rx|data_avail~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|data_avail .lut_mask = "0030";
defparam \rx|data_avail .operation_mode = "normal";
defparam \rx|data_avail .output_mode = "reg_and_comb";
defparam \rx|data_avail .register_cascade_mode = "off";
defparam \rx|data_avail .sum_lutc_input = "qfbk";
defparam \rx|data_avail .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y3_N3
maxii_lcell \reg_rx|state.ADD_COMMAND (
// Equation(s):
// \reg_rx|state.ADD_COMMAND~regout  = DFFEAS((\rx|data_avail~regout  & (((\reg_rx|state.00~regout  & !\reg_rx|state.ADD_ADDRESS~regout )))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\rx|data_avail~regout ),
	.datab(vcc),
	.datac(\reg_rx|state.00~regout ),
	.datad(\reg_rx|state.ADD_ADDRESS~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_rx|state.ADD_COMMAND~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_rx|state.ADD_COMMAND .lut_mask = "00a0";
defparam \reg_rx|state.ADD_COMMAND .operation_mode = "normal";
defparam \reg_rx|state.ADD_COMMAND .output_mode = "reg_only";
defparam \reg_rx|state.ADD_COMMAND .register_cascade_mode = "off";
defparam \reg_rx|state.ADD_COMMAND .sum_lutc_input = "datac";
defparam \reg_rx|state.ADD_COMMAND .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N2
maxii_lcell \reg_rx|done (
// Equation(s):
// \reg_txkjnn|Selector1~0  = (((C1_done & !\reg_txkjnn|state.00~regout )))
// \reg_rx|done~regout  = DFFEAS(\reg_txkjnn|Selector1~0 , GLOBAL(\clk~combout ), VCC, , , \reg_rx|state.ADD_COMMAND~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\reg_rx|state.ADD_COMMAND~regout ),
	.datad(\reg_txkjnn|state.00~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\reg_txkjnn|Selector1~0 ),
	.regout(\reg_rx|done~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_rx|done .lut_mask = "00f0";
defparam \reg_rx|done .operation_mode = "normal";
defparam \reg_rx|done .output_mode = "reg_and_comb";
defparam \reg_rx|done .register_cascade_mode = "off";
defparam \reg_rx|done .sum_lutc_input = "qfbk";
defparam \reg_rx|done .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y3_N1
maxii_lcell \reg_txkjnn|state.00 (
// Equation(s):
// \reg_txkjnn|state.00~regout  = DFFEAS((\lkm|done~regout  & (!\reg_txkjnn|state.BYTE_TWO~regout  & ((\reg_txkjnn|state.00~regout ) # (\reg_rx|done~regout )))) # (!\lkm|done~regout  & ((\reg_txkjnn|state.00~regout ) # ((\reg_rx|done~regout )))), 
// GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\lkm|done~regout ),
	.datab(\reg_txkjnn|state.00~regout ),
	.datac(\reg_txkjnn|state.BYTE_TWO~regout ),
	.datad(\reg_rx|done~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_txkjnn|state.00~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_txkjnn|state.00 .lut_mask = "5f4c";
defparam \reg_txkjnn|state.00 .operation_mode = "normal";
defparam \reg_txkjnn|state.00 .output_mode = "reg_only";
defparam \reg_txkjnn|state.00 .register_cascade_mode = "off";
defparam \reg_txkjnn|state.00 .sum_lutc_input = "datac";
defparam \reg_txkjnn|state.00 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N0
maxii_lcell \reg_txkjnn|state.BYTE_ONE (
// Equation(s):
// \reg_txkjnn|state.BYTE_ONE~regout  = DFFEAS((\lkm|done~regout  & (!\reg_txkjnn|state.00~regout  & ((\reg_rx|done~regout )))) # (!\lkm|done~regout  & ((\reg_txkjnn|state.BYTE_ONE~regout ) # ((!\reg_txkjnn|state.00~regout  & \reg_rx|done~regout )))), 
// GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\lkm|done~regout ),
	.datab(\reg_txkjnn|state.00~regout ),
	.datac(\reg_txkjnn|state.BYTE_ONE~regout ),
	.datad(\reg_rx|done~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_txkjnn|state.BYTE_ONE~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_txkjnn|state.BYTE_ONE .lut_mask = "7350";
defparam \reg_txkjnn|state.BYTE_ONE .operation_mode = "normal";
defparam \reg_txkjnn|state.BYTE_ONE .output_mode = "reg_only";
defparam \reg_txkjnn|state.BYTE_ONE .register_cascade_mode = "off";
defparam \reg_txkjnn|state.BYTE_ONE .sum_lutc_input = "datac";
defparam \reg_txkjnn|state.BYTE_ONE .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N7
maxii_lcell \reg_txkjnn|state.BYTE_TWO (
// Equation(s):
// \reg_txkjnn|state.BYTE_TWO~regout  = DFFEAS(((\reg_txkjnn|state.00~regout  & (!\reg_txkjnn|state.BYTE_ONE~regout  & !\lkm|done~regout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\reg_txkjnn|state.00~regout ),
	.datac(\reg_txkjnn|state.BYTE_ONE~regout ),
	.datad(\lkm|done~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_txkjnn|state.BYTE_TWO~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_txkjnn|state.BYTE_TWO .lut_mask = "000c";
defparam \reg_txkjnn|state.BYTE_TWO .operation_mode = "normal";
defparam \reg_txkjnn|state.BYTE_TWO .output_mode = "reg_only";
defparam \reg_txkjnn|state.BYTE_TWO .register_cascade_mode = "off";
defparam \reg_txkjnn|state.BYTE_TWO .sum_lutc_input = "datac";
defparam \reg_txkjnn|state.BYTE_TWO .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N5
maxii_lcell \reg_txkjnn|state.TEMPO (
// Equation(s):
// \reg_txkjnn|state.TEMPO~regout  = DFFEAS((\lkm|done~regout  & (!\reg_txkjnn|state.BYTE_TWO~regout  & ((\reg_txkjnn|state.00~regout )))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\lkm|done~regout ),
	.datab(\reg_txkjnn|state.BYTE_TWO~regout ),
	.datac(vcc),
	.datad(\reg_txkjnn|state.00~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_txkjnn|state.TEMPO~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_txkjnn|state.TEMPO .lut_mask = "2200";
defparam \reg_txkjnn|state.TEMPO .operation_mode = "normal";
defparam \reg_txkjnn|state.TEMPO .output_mode = "reg_only";
defparam \reg_txkjnn|state.TEMPO .register_cascade_mode = "off";
defparam \reg_txkjnn|state.TEMPO .sum_lutc_input = "datac";
defparam \reg_txkjnn|state.TEMPO .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N3
maxii_lcell \reg_txkjnn|byte_sent (
// Equation(s):
// \reg_txkjnn|data_aux~0  = (((!\reg_txkjnn|state.TEMPO~regout  & \reg_txkjnn|state.00~regout )))
// \reg_txkjnn|byte_sent~regout  = DFFEAS(\reg_txkjnn|data_aux~0 , GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\reg_txkjnn|state.TEMPO~regout ),
	.datad(\reg_txkjnn|state.00~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\reg_txkjnn|data_aux~0 ),
	.regout(\reg_txkjnn|byte_sent~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_txkjnn|byte_sent .lut_mask = "0f00";
defparam \reg_txkjnn|byte_sent .operation_mode = "normal";
defparam \reg_txkjnn|byte_sent .output_mode = "reg_and_comb";
defparam \reg_txkjnn|byte_sent .register_cascade_mode = "off";
defparam \reg_txkjnn|byte_sent .sum_lutc_input = "datac";
defparam \reg_txkjnn|byte_sent .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N4
maxii_lcell \lkm|Selector15~2 (
// Equation(s):
// \lkm|Selector15~2_combout  = (((!\reg_txkjnn|byte_sent~regout  & !\lkm|state.00~regout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\reg_txkjnn|byte_sent~regout ),
	.datad(\lkm|state.00~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lkm|Selector15~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lkm|Selector15~2 .lut_mask = "000f";
defparam \lkm|Selector15~2 .operation_mode = "normal";
defparam \lkm|Selector15~2 .output_mode = "comb_only";
defparam \lkm|Selector15~2 .register_cascade_mode = "off";
defparam \lkm|Selector15~2 .sum_lutc_input = "datac";
defparam \lkm|Selector15~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N9
maxii_lcell \lkm|tx_active (
// Equation(s):
// \lkm|tx_active~regout  = DFFEAS((\lkm|tx_active~regout  & (((!\lkm|state.STOP~regout ) # (!\lkm|LessThan1~3_combout )))) # (!\lkm|tx_active~regout  & (!\lkm|Selector15~2_combout  & ((!\lkm|state.STOP~regout )))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\lkm|Selector15~2_combout ),
	.datab(\lkm|tx_active~regout ),
	.datac(\lkm|LessThan1~3_combout ),
	.datad(\lkm|state.STOP~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\lkm|tx_active~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lkm|tx_active .lut_mask = "0cdd";
defparam \lkm|tx_active .operation_mode = "normal";
defparam \lkm|tx_active .output_mode = "reg_only";
defparam \lkm|tx_active .register_cascade_mode = "off";
defparam \lkm|tx_active .sum_lutc_input = "datac";
defparam \lkm|tx_active .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N6
maxii_lcell \rx|data_reg[7]~0 (
// Equation(s):
// \rx|data_reg[7]~0_combout  = (!\rx|LessThan2~5_combout  & (((\rx|state.DATA~regout  & !\rx|LessThan2~3_combout ))))

	.clk(gnd),
	.dataa(\rx|LessThan2~5_combout ),
	.datab(vcc),
	.datac(\rx|state.DATA~regout ),
	.datad(\rx|LessThan2~3_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\rx|data_reg[7]~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|data_reg[7]~0 .lut_mask = "0050";
defparam \rx|data_reg[7]~0 .operation_mode = "normal";
defparam \rx|data_reg[7]~0 .output_mode = "comb_only";
defparam \rx|data_reg[7]~0 .register_cascade_mode = "off";
defparam \rx|data_reg[7]~0 .sum_lutc_input = "datac";
defparam \rx|data_reg[7]~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y2_N5
maxii_lcell \rx|Decoder0~7 (
// Equation(s):
// \rx|Decoder0~7_combout  = (\rx|bit_index [1] & (\rx|bit_index [0] & (!\rx|bit_index [2] & \rx|data_reg[7]~0_combout )))

	.clk(gnd),
	.dataa(\rx|bit_index [1]),
	.datab(\rx|bit_index [0]),
	.datac(\rx|bit_index [2]),
	.datad(\rx|data_reg[7]~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\rx|Decoder0~7_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|Decoder0~7 .lut_mask = "0800";
defparam \rx|Decoder0~7 .operation_mode = "normal";
defparam \rx|Decoder0~7 .output_mode = "comb_only";
defparam \rx|Decoder0~7 .register_cascade_mode = "off";
defparam \rx|Decoder0~7 .sum_lutc_input = "datac";
defparam \rx|Decoder0~7 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y2_N6
maxii_lcell \rx|data_reg[3] (
// Equation(s):
// \rx|data_reg [3] = DFFEAS(((\rx|Decoder0~7_combout  & ((!\rx|rx_data~regout ))) # (!\rx|Decoder0~7_combout  & (\rx|data_reg [3]))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\rx|data_reg [3]),
	.datab(vcc),
	.datac(\rx|rx_data~regout ),
	.datad(\rx|Decoder0~7_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\rx|data_reg [3]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|data_reg[3] .lut_mask = "0faa";
defparam \rx|data_reg[3] .operation_mode = "normal";
defparam \rx|data_reg[3] .output_mode = "reg_only";
defparam \rx|data_reg[3] .register_cascade_mode = "off";
defparam \rx|data_reg[3] .sum_lutc_input = "datac";
defparam \rx|data_reg[3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y2_N4
maxii_lcell \reg_rx|buffer_data[3] (
// Equation(s):
// \reg_rx|buffer_data [3] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , \reg_rx|buffer_data[1]~0 , \rx|data_reg [3], , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\rx|data_reg [3]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\reg_rx|buffer_data[1]~0 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_rx|buffer_data [3]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_rx|buffer_data[3] .lut_mask = "0000";
defparam \reg_rx|buffer_data[3] .operation_mode = "normal";
defparam \reg_rx|buffer_data[3] .output_mode = "reg_only";
defparam \reg_rx|buffer_data[3] .register_cascade_mode = "off";
defparam \reg_rx|buffer_data[3] .sum_lutc_input = "datac";
defparam \reg_rx|buffer_data[3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y4_N2
maxii_lcell \reg_rx|registrar[3] (
// Equation(s):
// \reg_rx|registrar [3] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , \reg_rx|state.ADD_COMMAND~regout , \reg_rx|buffer_data [3], , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\reg_rx|buffer_data [3]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\reg_rx|state.ADD_COMMAND~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_rx|registrar [3]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_rx|registrar[3] .lut_mask = "0000";
defparam \reg_rx|registrar[3] .operation_mode = "normal";
defparam \reg_rx|registrar[3] .output_mode = "reg_only";
defparam \reg_rx|registrar[3] .register_cascade_mode = "off";
defparam \reg_rx|registrar[3] .sum_lutc_input = "datac";
defparam \reg_rx|registrar[3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y3_N8
maxii_lcell \reg_txkjnn|buffer[11] (
// Equation(s):
// \reg_txkjnn|buffer [11] = DFFEAS((((\reg_rx|registrar [3]))), GLOBAL(\clk~combout ), VCC, , \reg_txkjnn|Selector1~0 , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\reg_rx|registrar [3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\reg_txkjnn|Selector1~0 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_txkjnn|buffer [11]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_txkjnn|buffer[11] .lut_mask = "ff00";
defparam \reg_txkjnn|buffer[11] .operation_mode = "normal";
defparam \reg_txkjnn|buffer[11] .output_mode = "reg_only";
defparam \reg_txkjnn|buffer[11] .register_cascade_mode = "off";
defparam \reg_txkjnn|buffer[11] .sum_lutc_input = "datac";
defparam \reg_txkjnn|buffer[11] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y4_N1
maxii_lcell \reg_rx|registrar[11] (
// Equation(s):
// \reg_rx|registrar [11] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , \reg_rx|state.ADD_ADDRESS~regout , \reg_rx|buffer_data [3], , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\reg_rx|buffer_data [3]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\reg_rx|state.ADD_ADDRESS~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_rx|registrar [11]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_rx|registrar[11] .lut_mask = "0000";
defparam \reg_rx|registrar[11] .operation_mode = "normal";
defparam \reg_rx|registrar[11] .output_mode = "reg_only";
defparam \reg_rx|registrar[11] .register_cascade_mode = "off";
defparam \reg_rx|registrar[11] .sum_lutc_input = "datac";
defparam \reg_rx|registrar[11] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y3_N5
maxii_lcell \reg_txkjnn|buffer[3] (
// Equation(s):
// \reg_txkjnn|buffer [3] = DFFEAS((((\reg_rx|registrar [11]))), GLOBAL(\clk~combout ), VCC, , \reg_txkjnn|Selector1~0 , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\reg_rx|registrar [11]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\reg_txkjnn|Selector1~0 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_txkjnn|buffer [3]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_txkjnn|buffer[3] .lut_mask = "ff00";
defparam \reg_txkjnn|buffer[3] .operation_mode = "normal";
defparam \reg_txkjnn|buffer[3] .output_mode = "reg_only";
defparam \reg_txkjnn|buffer[3] .register_cascade_mode = "off";
defparam \reg_txkjnn|buffer[3] .sum_lutc_input = "datac";
defparam \reg_txkjnn|buffer[3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y3_N1
maxii_lcell \reg_txkjnn|data_aux[3] (
// Equation(s):
// \reg_txkjnn|data_aux [3] = DFFEAS(((\reg_txkjnn|state.BYTE_TWO~regout  & (\reg_txkjnn|buffer [11])) # (!\reg_txkjnn|state.BYTE_TWO~regout  & ((\reg_txkjnn|buffer [3])))), GLOBAL(\clk~combout ), VCC, , \reg_txkjnn|data_aux~0 , , , , )

	.clk(\clk~combout ),
	.dataa(\reg_txkjnn|buffer [11]),
	.datab(vcc),
	.datac(\reg_txkjnn|buffer [3]),
	.datad(\reg_txkjnn|state.BYTE_TWO~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\reg_txkjnn|data_aux~0 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_txkjnn|data_aux [3]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_txkjnn|data_aux[3] .lut_mask = "aaf0";
defparam \reg_txkjnn|data_aux[3] .operation_mode = "normal";
defparam \reg_txkjnn|data_aux[3] .output_mode = "reg_only";
defparam \reg_txkjnn|data_aux[3] .register_cascade_mode = "off";
defparam \reg_txkjnn|data_aux[3] .sum_lutc_input = "datac";
defparam \reg_txkjnn|data_aux[3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y1_N5
maxii_lcell \lkm|data_bit[1]~0 (
// Equation(s):
// \lkm|data_bit[1]~0_combout  = (((\reg_txkjnn|byte_sent~regout  & !\lkm|state.00~regout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\reg_txkjnn|byte_sent~regout ),
	.datad(\lkm|state.00~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lkm|data_bit[1]~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lkm|data_bit[1]~0 .lut_mask = "00f0";
defparam \lkm|data_bit[1]~0 .operation_mode = "normal";
defparam \lkm|data_bit[1]~0 .output_mode = "comb_only";
defparam \lkm|data_bit[1]~0 .register_cascade_mode = "off";
defparam \lkm|data_bit[1]~0 .sum_lutc_input = "datac";
defparam \lkm|data_bit[1]~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y1_N6
maxii_lcell \lkm|data_bit[3] (
// Equation(s):
// \lkm|data_bit [3] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , \lkm|data_bit[1]~0_combout , \reg_txkjnn|data_aux [3], , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\reg_txkjnn|data_aux [3]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\lkm|data_bit[1]~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\lkm|data_bit [3]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lkm|data_bit[3] .lut_mask = "0000";
defparam \lkm|data_bit[3] .operation_mode = "normal";
defparam \lkm|data_bit[3] .output_mode = "reg_only";
defparam \lkm|data_bit[3] .register_cascade_mode = "off";
defparam \lkm|data_bit[3] .sum_lutc_input = "datac";
defparam \lkm|data_bit[3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y2_N1
maxii_lcell \rx|Decoder0~6 (
// Equation(s):
// \rx|Decoder0~6_combout  = (!\rx|bit_index [1] & (!\rx|bit_index [0] & (!\rx|bit_index [2] & \rx|data_reg[7]~0_combout )))

	.clk(gnd),
	.dataa(\rx|bit_index [1]),
	.datab(\rx|bit_index [0]),
	.datac(\rx|bit_index [2]),
	.datad(\rx|data_reg[7]~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\rx|Decoder0~6_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|Decoder0~6 .lut_mask = "0100";
defparam \rx|Decoder0~6 .operation_mode = "normal";
defparam \rx|Decoder0~6 .output_mode = "comb_only";
defparam \rx|Decoder0~6 .register_cascade_mode = "off";
defparam \rx|Decoder0~6 .sum_lutc_input = "datac";
defparam \rx|Decoder0~6 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y2_N2
maxii_lcell \rx|data_reg[0] (
// Equation(s):
// \rx|data_reg [0] = DFFEAS(((\rx|Decoder0~6_combout  & ((!\rx|rx_data~regout ))) # (!\rx|Decoder0~6_combout  & (\rx|data_reg [0]))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\rx|data_reg [0]),
	.datac(\rx|rx_data~regout ),
	.datad(\rx|Decoder0~6_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\rx|data_reg [0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|data_reg[0] .lut_mask = "0fcc";
defparam \rx|data_reg[0] .operation_mode = "normal";
defparam \rx|data_reg[0] .output_mode = "reg_only";
defparam \rx|data_reg[0] .register_cascade_mode = "off";
defparam \rx|data_reg[0] .sum_lutc_input = "datac";
defparam \rx|data_reg[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y2_N3
maxii_lcell \reg_rx|buffer_data[0] (
// Equation(s):
// \reg_rx|buffer_data [0] = DFFEAS((((\rx|data_reg [0]))), GLOBAL(\clk~combout ), VCC, , \reg_rx|buffer_data[1]~0 , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\rx|data_reg [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\reg_rx|buffer_data[1]~0 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_rx|buffer_data [0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_rx|buffer_data[0] .lut_mask = "ff00";
defparam \reg_rx|buffer_data[0] .operation_mode = "normal";
defparam \reg_rx|buffer_data[0] .output_mode = "reg_only";
defparam \reg_rx|buffer_data[0] .register_cascade_mode = "off";
defparam \reg_rx|buffer_data[0] .sum_lutc_input = "datac";
defparam \reg_rx|buffer_data[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y4_N6
maxii_lcell \reg_rx|registrar[0] (
// Equation(s):
// \reg_rx|registrar [0] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , \reg_rx|state.ADD_COMMAND~regout , \reg_rx|buffer_data [0], , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\reg_rx|buffer_data [0]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\reg_rx|state.ADD_COMMAND~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_rx|registrar [0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_rx|registrar[0] .lut_mask = "0000";
defparam \reg_rx|registrar[0] .operation_mode = "normal";
defparam \reg_rx|registrar[0] .output_mode = "reg_only";
defparam \reg_rx|registrar[0] .register_cascade_mode = "off";
defparam \reg_rx|registrar[0] .sum_lutc_input = "datac";
defparam \reg_rx|registrar[0] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y3_N6
maxii_lcell \reg_txkjnn|buffer[8] (
// Equation(s):
// \reg_txkjnn|buffer [8] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , \reg_txkjnn|Selector1~0 , \reg_rx|registrar [0], , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\reg_rx|registrar [0]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\reg_txkjnn|Selector1~0 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_txkjnn|buffer [8]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_txkjnn|buffer[8] .lut_mask = "0000";
defparam \reg_txkjnn|buffer[8] .operation_mode = "normal";
defparam \reg_txkjnn|buffer[8] .output_mode = "reg_only";
defparam \reg_txkjnn|buffer[8] .register_cascade_mode = "off";
defparam \reg_txkjnn|buffer[8] .sum_lutc_input = "datac";
defparam \reg_txkjnn|buffer[8] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y4_N7
maxii_lcell \reg_rx|registrar[8] (
// Equation(s):
// \reg_rx|registrar [8] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , \reg_rx|state.ADD_ADDRESS~regout , \reg_rx|buffer_data [0], , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\reg_rx|buffer_data [0]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\reg_rx|state.ADD_ADDRESS~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_rx|registrar [8]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_rx|registrar[8] .lut_mask = "0000";
defparam \reg_rx|registrar[8] .operation_mode = "normal";
defparam \reg_rx|registrar[8] .output_mode = "reg_only";
defparam \reg_rx|registrar[8] .register_cascade_mode = "off";
defparam \reg_rx|registrar[8] .sum_lutc_input = "datac";
defparam \reg_rx|registrar[8] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y3_N4
maxii_lcell \reg_txkjnn|buffer[0] (
// Equation(s):
// \reg_txkjnn|buffer [0] = DFFEAS((((\reg_rx|registrar [8]))), GLOBAL(\clk~combout ), VCC, , \reg_txkjnn|Selector1~0 , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\reg_rx|registrar [8]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\reg_txkjnn|Selector1~0 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_txkjnn|buffer [0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_txkjnn|buffer[0] .lut_mask = "ff00";
defparam \reg_txkjnn|buffer[0] .operation_mode = "normal";
defparam \reg_txkjnn|buffer[0] .output_mode = "reg_only";
defparam \reg_txkjnn|buffer[0] .register_cascade_mode = "off";
defparam \reg_txkjnn|buffer[0] .sum_lutc_input = "datac";
defparam \reg_txkjnn|buffer[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y3_N9
maxii_lcell \reg_txkjnn|data_aux[0] (
// Equation(s):
// \reg_txkjnn|data_aux [0] = DFFEAS(((\reg_txkjnn|state.BYTE_TWO~regout  & (\reg_txkjnn|buffer [8])) # (!\reg_txkjnn|state.BYTE_TWO~regout  & ((\reg_txkjnn|buffer [0])))), GLOBAL(\clk~combout ), VCC, , \reg_txkjnn|data_aux~0 , , , , )

	.clk(\clk~combout ),
	.dataa(\reg_txkjnn|buffer [8]),
	.datab(vcc),
	.datac(\reg_txkjnn|buffer [0]),
	.datad(\reg_txkjnn|state.BYTE_TWO~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\reg_txkjnn|data_aux~0 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_txkjnn|data_aux [0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_txkjnn|data_aux[0] .lut_mask = "aaf0";
defparam \reg_txkjnn|data_aux[0] .operation_mode = "normal";
defparam \reg_txkjnn|data_aux[0] .output_mode = "reg_only";
defparam \reg_txkjnn|data_aux[0] .register_cascade_mode = "off";
defparam \reg_txkjnn|data_aux[0] .sum_lutc_input = "datac";
defparam \reg_txkjnn|data_aux[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y1_N1
maxii_lcell \lkm|data_bit[0] (
// Equation(s):
// \lkm|data_bit [0] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , \lkm|data_bit[1]~0_combout , \reg_txkjnn|data_aux [0], , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\reg_txkjnn|data_aux [0]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\lkm|data_bit[1]~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\lkm|data_bit [0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lkm|data_bit[0] .lut_mask = "0000";
defparam \lkm|data_bit[0] .operation_mode = "normal";
defparam \lkm|data_bit[0] .output_mode = "reg_only";
defparam \lkm|data_bit[0] .register_cascade_mode = "off";
defparam \lkm|data_bit[0] .sum_lutc_input = "datac";
defparam \lkm|data_bit[0] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y2_N8
maxii_lcell \rx|Decoder0~5 (
// Equation(s):
// \rx|Decoder0~5_combout  = (!\rx|bit_index [1] & (\rx|bit_index [0] & (!\rx|bit_index [2] & \rx|data_reg[7]~0_combout )))

	.clk(gnd),
	.dataa(\rx|bit_index [1]),
	.datab(\rx|bit_index [0]),
	.datac(\rx|bit_index [2]),
	.datad(\rx|data_reg[7]~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\rx|Decoder0~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|Decoder0~5 .lut_mask = "0400";
defparam \rx|Decoder0~5 .operation_mode = "normal";
defparam \rx|Decoder0~5 .output_mode = "comb_only";
defparam \rx|Decoder0~5 .register_cascade_mode = "off";
defparam \rx|Decoder0~5 .sum_lutc_input = "datac";
defparam \rx|Decoder0~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y2_N9
maxii_lcell \rx|data_reg[1] (
// Equation(s):
// \rx|data_reg [1] = DFFEAS(((\rx|Decoder0~5_combout  & ((!\rx|rx_data~regout ))) # (!\rx|Decoder0~5_combout  & (\rx|data_reg [1]))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\rx|data_reg [1]),
	.datac(\rx|rx_data~regout ),
	.datad(\rx|Decoder0~5_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\rx|data_reg [1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|data_reg[1] .lut_mask = "0fcc";
defparam \rx|data_reg[1] .operation_mode = "normal";
defparam \rx|data_reg[1] .output_mode = "reg_only";
defparam \rx|data_reg[1] .register_cascade_mode = "off";
defparam \rx|data_reg[1] .sum_lutc_input = "datac";
defparam \rx|data_reg[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y2_N7
maxii_lcell \reg_rx|buffer_data[1] (
// Equation(s):
// \reg_rx|buffer_data [1] = DFFEAS((((\rx|data_reg [1]))), GLOBAL(\clk~combout ), VCC, , \reg_rx|buffer_data[1]~0 , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\rx|data_reg [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\reg_rx|buffer_data[1]~0 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_rx|buffer_data [1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_rx|buffer_data[1] .lut_mask = "ff00";
defparam \reg_rx|buffer_data[1] .operation_mode = "normal";
defparam \reg_rx|buffer_data[1] .output_mode = "reg_only";
defparam \reg_rx|buffer_data[1] .register_cascade_mode = "off";
defparam \reg_rx|buffer_data[1] .sum_lutc_input = "datac";
defparam \reg_rx|buffer_data[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y4_N3
maxii_lcell \reg_rx|registrar[1] (
// Equation(s):
// \reg_rx|registrar [1] = DFFEAS((((\reg_rx|buffer_data [1]))), GLOBAL(\clk~combout ), VCC, , \reg_rx|state.ADD_COMMAND~regout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\reg_rx|buffer_data [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\reg_rx|state.ADD_COMMAND~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_rx|registrar [1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_rx|registrar[1] .lut_mask = "ff00";
defparam \reg_rx|registrar[1] .operation_mode = "normal";
defparam \reg_rx|registrar[1] .output_mode = "reg_only";
defparam \reg_rx|registrar[1] .register_cascade_mode = "off";
defparam \reg_rx|registrar[1] .sum_lutc_input = "datac";
defparam \reg_rx|registrar[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y3_N0
maxii_lcell \reg_txkjnn|buffer[9] (
// Equation(s):
// \reg_txkjnn|buffer [9] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , \reg_txkjnn|Selector1~0 , \reg_rx|registrar [1], , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\reg_rx|registrar [1]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\reg_txkjnn|Selector1~0 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_txkjnn|buffer [9]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_txkjnn|buffer[9] .lut_mask = "0000";
defparam \reg_txkjnn|buffer[9] .operation_mode = "normal";
defparam \reg_txkjnn|buffer[9] .output_mode = "reg_only";
defparam \reg_txkjnn|buffer[9] .register_cascade_mode = "off";
defparam \reg_txkjnn|buffer[9] .sum_lutc_input = "datac";
defparam \reg_txkjnn|buffer[9] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y4_N0
maxii_lcell \reg_rx|registrar[9] (
// Equation(s):
// \reg_rx|registrar [9] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , \reg_rx|state.ADD_ADDRESS~regout , \reg_rx|buffer_data [1], , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\reg_rx|buffer_data [1]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\reg_rx|state.ADD_ADDRESS~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_rx|registrar [9]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_rx|registrar[9] .lut_mask = "0000";
defparam \reg_rx|registrar[9] .operation_mode = "normal";
defparam \reg_rx|registrar[9] .output_mode = "reg_only";
defparam \reg_rx|registrar[9] .register_cascade_mode = "off";
defparam \reg_rx|registrar[9] .sum_lutc_input = "datac";
defparam \reg_rx|registrar[9] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y3_N7
maxii_lcell \reg_txkjnn|buffer[1] (
// Equation(s):
// \reg_txkjnn|buffer [1] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , \reg_txkjnn|Selector1~0 , \reg_rx|registrar [9], , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\reg_rx|registrar [9]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\reg_txkjnn|Selector1~0 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_txkjnn|buffer [1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_txkjnn|buffer[1] .lut_mask = "0000";
defparam \reg_txkjnn|buffer[1] .operation_mode = "normal";
defparam \reg_txkjnn|buffer[1] .output_mode = "reg_only";
defparam \reg_txkjnn|buffer[1] .register_cascade_mode = "off";
defparam \reg_txkjnn|buffer[1] .sum_lutc_input = "datac";
defparam \reg_txkjnn|buffer[1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y3_N2
maxii_lcell \reg_txkjnn|data_aux[1] (
// Equation(s):
// \reg_txkjnn|data_aux [1] = DFFEAS(((\reg_txkjnn|state.BYTE_TWO~regout  & (\reg_txkjnn|buffer [9])) # (!\reg_txkjnn|state.BYTE_TWO~regout  & ((\reg_txkjnn|buffer [1])))), GLOBAL(\clk~combout ), VCC, , \reg_txkjnn|data_aux~0 , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\reg_txkjnn|buffer [9]),
	.datac(\reg_txkjnn|buffer [1]),
	.datad(\reg_txkjnn|state.BYTE_TWO~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\reg_txkjnn|data_aux~0 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_txkjnn|data_aux [1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_txkjnn|data_aux[1] .lut_mask = "ccf0";
defparam \reg_txkjnn|data_aux[1] .operation_mode = "normal";
defparam \reg_txkjnn|data_aux[1] .output_mode = "reg_only";
defparam \reg_txkjnn|data_aux[1] .register_cascade_mode = "off";
defparam \reg_txkjnn|data_aux[1] .sum_lutc_input = "datac";
defparam \reg_txkjnn|data_aux[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y1_N0
maxii_lcell \lkm|data_bit[1] (
// Equation(s):
// \lkm|Mux0~2  = (\lkm|bit_index [0] & (((B1_data_bit[1]) # (\lkm|bit_index [1])))) # (!\lkm|bit_index [0] & (\lkm|data_bit [0] & ((!\lkm|bit_index [1]))))

	.clk(\clk~combout ),
	.dataa(\lkm|bit_index [0]),
	.datab(\lkm|data_bit [0]),
	.datac(\reg_txkjnn|data_aux [1]),
	.datad(\lkm|bit_index [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\lkm|data_bit[1]~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lkm|Mux0~2 ),
	.regout(\lkm|data_bit [1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lkm|data_bit[1] .lut_mask = "aae4";
defparam \lkm|data_bit[1] .operation_mode = "normal";
defparam \lkm|data_bit[1] .output_mode = "comb_only";
defparam \lkm|data_bit[1] .register_cascade_mode = "off";
defparam \lkm|data_bit[1] .sum_lutc_input = "qfbk";
defparam \lkm|data_bit[1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y2_N5
maxii_lcell \rx|Decoder0~4 (
// Equation(s):
// \rx|Decoder0~4_combout  = (\rx|bit_index [1] & (!\rx|bit_index [0] & (\rx|data_reg[7]~0_combout  & !\rx|bit_index [2])))

	.clk(gnd),
	.dataa(\rx|bit_index [1]),
	.datab(\rx|bit_index [0]),
	.datac(\rx|data_reg[7]~0_combout ),
	.datad(\rx|bit_index [2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\rx|Decoder0~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|Decoder0~4 .lut_mask = "0020";
defparam \rx|Decoder0~4 .operation_mode = "normal";
defparam \rx|Decoder0~4 .output_mode = "comb_only";
defparam \rx|Decoder0~4 .register_cascade_mode = "off";
defparam \rx|Decoder0~4 .sum_lutc_input = "datac";
defparam \rx|Decoder0~4 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y2_N6
maxii_lcell \rx|data_reg[2] (
// Equation(s):
// \rx|data_reg [2] = DFFEAS(((\rx|Decoder0~4_combout  & (!\rx|rx_data~regout )) # (!\rx|Decoder0~4_combout  & ((\rx|data_reg [2])))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\rx|rx_data~regout ),
	.datab(vcc),
	.datac(\rx|data_reg [2]),
	.datad(\rx|Decoder0~4_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\rx|data_reg [2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|data_reg[2] .lut_mask = "55f0";
defparam \rx|data_reg[2] .operation_mode = "normal";
defparam \rx|data_reg[2] .output_mode = "reg_only";
defparam \rx|data_reg[2] .register_cascade_mode = "off";
defparam \rx|data_reg[2] .sum_lutc_input = "datac";
defparam \rx|data_reg[2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y2_N1
maxii_lcell \reg_rx|buffer_data[2] (
// Equation(s):
// \reg_rx|buffer_data [2] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , \reg_rx|buffer_data[1]~0 , \rx|data_reg [2], , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\rx|data_reg [2]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\reg_rx|buffer_data[1]~0 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_rx|buffer_data [2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_rx|buffer_data[2] .lut_mask = "0000";
defparam \reg_rx|buffer_data[2] .operation_mode = "normal";
defparam \reg_rx|buffer_data[2] .output_mode = "reg_only";
defparam \reg_rx|buffer_data[2] .register_cascade_mode = "off";
defparam \reg_rx|buffer_data[2] .sum_lutc_input = "datac";
defparam \reg_rx|buffer_data[2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y4_N8
maxii_lcell \reg_rx|registrar[2] (
// Equation(s):
// \reg_rx|registrar [2] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , \reg_rx|state.ADD_COMMAND~regout , \reg_rx|buffer_data [2], , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\reg_rx|buffer_data [2]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\reg_rx|state.ADD_COMMAND~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_rx|registrar [2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_rx|registrar[2] .lut_mask = "0000";
defparam \reg_rx|registrar[2] .operation_mode = "normal";
defparam \reg_rx|registrar[2] .output_mode = "reg_only";
defparam \reg_rx|registrar[2] .register_cascade_mode = "off";
defparam \reg_rx|registrar[2] .sum_lutc_input = "datac";
defparam \reg_rx|registrar[2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y4_N1
maxii_lcell \reg_txkjnn|buffer[10] (
// Equation(s):
// \reg_txkjnn|buffer [10] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , \reg_txkjnn|Selector1~0 , \reg_rx|registrar [2], , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\reg_rx|registrar [2]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\reg_txkjnn|Selector1~0 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_txkjnn|buffer [10]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_txkjnn|buffer[10] .lut_mask = "0000";
defparam \reg_txkjnn|buffer[10] .operation_mode = "normal";
defparam \reg_txkjnn|buffer[10] .output_mode = "reg_only";
defparam \reg_txkjnn|buffer[10] .register_cascade_mode = "off";
defparam \reg_txkjnn|buffer[10] .sum_lutc_input = "datac";
defparam \reg_txkjnn|buffer[10] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y4_N3
maxii_lcell \reg_rx|registrar[10] (
// Equation(s):
// \reg_rx|registrar [10] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , \reg_rx|state.ADD_ADDRESS~regout , \reg_rx|buffer_data [2], , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\reg_rx|buffer_data [2]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\reg_rx|state.ADD_ADDRESS~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_rx|registrar [10]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_rx|registrar[10] .lut_mask = "0000";
defparam \reg_rx|registrar[10] .operation_mode = "normal";
defparam \reg_rx|registrar[10] .output_mode = "reg_only";
defparam \reg_rx|registrar[10] .register_cascade_mode = "off";
defparam \reg_rx|registrar[10] .sum_lutc_input = "datac";
defparam \reg_rx|registrar[10] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y4_N7
maxii_lcell \reg_txkjnn|buffer[2] (
// Equation(s):
// \reg_txkjnn|buffer [2] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , \reg_txkjnn|Selector1~0 , \reg_rx|registrar [10], , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\reg_rx|registrar [10]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\reg_txkjnn|Selector1~0 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_txkjnn|buffer [2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_txkjnn|buffer[2] .lut_mask = "0000";
defparam \reg_txkjnn|buffer[2] .operation_mode = "normal";
defparam \reg_txkjnn|buffer[2] .output_mode = "reg_only";
defparam \reg_txkjnn|buffer[2] .register_cascade_mode = "off";
defparam \reg_txkjnn|buffer[2] .sum_lutc_input = "datac";
defparam \reg_txkjnn|buffer[2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y4_N5
maxii_lcell \reg_txkjnn|data_aux[2] (
// Equation(s):
// \reg_txkjnn|data_aux [2] = DFFEAS(((\reg_txkjnn|state.BYTE_TWO~regout  & (\reg_txkjnn|buffer [10])) # (!\reg_txkjnn|state.BYTE_TWO~regout  & ((\reg_txkjnn|buffer [2])))), GLOBAL(\clk~combout ), VCC, , \reg_txkjnn|data_aux~0 , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\reg_txkjnn|buffer [10]),
	.datac(\reg_txkjnn|buffer [2]),
	.datad(\reg_txkjnn|state.BYTE_TWO~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\reg_txkjnn|data_aux~0 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_txkjnn|data_aux [2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_txkjnn|data_aux[2] .lut_mask = "ccf0";
defparam \reg_txkjnn|data_aux[2] .operation_mode = "normal";
defparam \reg_txkjnn|data_aux[2] .output_mode = "reg_only";
defparam \reg_txkjnn|data_aux[2] .register_cascade_mode = "off";
defparam \reg_txkjnn|data_aux[2] .sum_lutc_input = "datac";
defparam \reg_txkjnn|data_aux[2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y1_N5
maxii_lcell \lkm|data_bit[2] (
// Equation(s):
// \lkm|Mux0~3  = (\lkm|Mux0~2  & ((\lkm|data_bit [3]) # ((!\lkm|bit_index [1])))) # (!\lkm|Mux0~2  & (((B1_data_bit[2] & \lkm|bit_index [1]))))

	.clk(\clk~combout ),
	.dataa(\lkm|data_bit [3]),
	.datab(\lkm|Mux0~2 ),
	.datac(\reg_txkjnn|data_aux [2]),
	.datad(\lkm|bit_index [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\lkm|data_bit[1]~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lkm|Mux0~3 ),
	.regout(\lkm|data_bit [2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lkm|data_bit[2] .lut_mask = "b8cc";
defparam \lkm|data_bit[2] .operation_mode = "normal";
defparam \lkm|data_bit[2] .output_mode = "comb_only";
defparam \lkm|data_bit[2] .register_cascade_mode = "off";
defparam \lkm|data_bit[2] .sum_lutc_input = "qfbk";
defparam \lkm|data_bit[2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y2_N7
maxii_lcell \rx|Decoder0~3 (
// Equation(s):
// \rx|Decoder0~3_combout  = (\rx|bit_index [0] & (\rx|bit_index [1] & (\rx|data_reg[7]~0_combout  & \rx|bit_index [2])))

	.clk(gnd),
	.dataa(\rx|bit_index [0]),
	.datab(\rx|bit_index [1]),
	.datac(\rx|data_reg[7]~0_combout ),
	.datad(\rx|bit_index [2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\rx|Decoder0~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|Decoder0~3 .lut_mask = "8000";
defparam \rx|Decoder0~3 .operation_mode = "normal";
defparam \rx|Decoder0~3 .output_mode = "comb_only";
defparam \rx|Decoder0~3 .register_cascade_mode = "off";
defparam \rx|Decoder0~3 .sum_lutc_input = "datac";
defparam \rx|Decoder0~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y2_N8
maxii_lcell \rx|data_reg[7] (
// Equation(s):
// \rx|data_reg [7] = DFFEAS(((\rx|Decoder0~3_combout  & ((!\rx|rx_data~regout ))) # (!\rx|Decoder0~3_combout  & (\rx|data_reg [7]))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\rx|data_reg [7]),
	.datab(vcc),
	.datac(\rx|rx_data~regout ),
	.datad(\rx|Decoder0~3_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\rx|data_reg [7]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|data_reg[7] .lut_mask = "0faa";
defparam \rx|data_reg[7] .operation_mode = "normal";
defparam \rx|data_reg[7] .output_mode = "reg_only";
defparam \rx|data_reg[7] .register_cascade_mode = "off";
defparam \rx|data_reg[7] .sum_lutc_input = "datac";
defparam \rx|data_reg[7] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y2_N3
maxii_lcell \reg_rx|buffer_data[7] (
// Equation(s):
// \reg_rx|buffer_data [7] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , \reg_rx|buffer_data[1]~0 , \rx|data_reg [7], , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\rx|data_reg [7]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\reg_rx|buffer_data[1]~0 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_rx|buffer_data [7]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_rx|buffer_data[7] .lut_mask = "0000";
defparam \reg_rx|buffer_data[7] .operation_mode = "normal";
defparam \reg_rx|buffer_data[7] .output_mode = "reg_only";
defparam \reg_rx|buffer_data[7] .register_cascade_mode = "off";
defparam \reg_rx|buffer_data[7] .sum_lutc_input = "datac";
defparam \reg_rx|buffer_data[7] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y4_N0
maxii_lcell \reg_rx|registrar[7] (
// Equation(s):
// \reg_rx|registrar [7] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , \reg_rx|state.ADD_COMMAND~regout , \reg_rx|buffer_data [7], , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\reg_rx|buffer_data [7]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\reg_rx|state.ADD_COMMAND~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_rx|registrar [7]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_rx|registrar[7] .lut_mask = "0000";
defparam \reg_rx|registrar[7] .operation_mode = "normal";
defparam \reg_rx|registrar[7] .output_mode = "reg_only";
defparam \reg_rx|registrar[7] .register_cascade_mode = "off";
defparam \reg_rx|registrar[7] .sum_lutc_input = "datac";
defparam \reg_rx|registrar[7] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y4_N5
maxii_lcell \reg_txkjnn|buffer[15] (
// Equation(s):
// \reg_txkjnn|buffer [15] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , \reg_txkjnn|Selector1~0 , \reg_rx|registrar [7], , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\reg_rx|registrar [7]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\reg_txkjnn|Selector1~0 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_txkjnn|buffer [15]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_txkjnn|buffer[15] .lut_mask = "0000";
defparam \reg_txkjnn|buffer[15] .operation_mode = "normal";
defparam \reg_txkjnn|buffer[15] .output_mode = "reg_only";
defparam \reg_txkjnn|buffer[15] .register_cascade_mode = "off";
defparam \reg_txkjnn|buffer[15] .sum_lutc_input = "datac";
defparam \reg_txkjnn|buffer[15] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y4_N2
maxii_lcell \reg_rx|registrar[15] (
// Equation(s):
// \reg_rx|registrar [15] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , \reg_rx|state.ADD_ADDRESS~regout , \reg_rx|buffer_data [7], , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\reg_rx|buffer_data [7]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\reg_rx|state.ADD_ADDRESS~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_rx|registrar [15]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_rx|registrar[15] .lut_mask = "0000";
defparam \reg_rx|registrar[15] .operation_mode = "normal";
defparam \reg_rx|registrar[15] .output_mode = "reg_only";
defparam \reg_rx|registrar[15] .register_cascade_mode = "off";
defparam \reg_rx|registrar[15] .sum_lutc_input = "datac";
defparam \reg_rx|registrar[15] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y4_N6
maxii_lcell \reg_txkjnn|buffer[7] (
// Equation(s):
// \reg_txkjnn|buffer [7] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , \reg_txkjnn|Selector1~0 , \reg_rx|registrar [15], , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\reg_rx|registrar [15]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\reg_txkjnn|Selector1~0 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_txkjnn|buffer [7]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_txkjnn|buffer[7] .lut_mask = "0000";
defparam \reg_txkjnn|buffer[7] .operation_mode = "normal";
defparam \reg_txkjnn|buffer[7] .output_mode = "reg_only";
defparam \reg_txkjnn|buffer[7] .register_cascade_mode = "off";
defparam \reg_txkjnn|buffer[7] .sum_lutc_input = "datac";
defparam \reg_txkjnn|buffer[7] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y4_N2
maxii_lcell \reg_txkjnn|data_aux[7] (
// Equation(s):
// \reg_txkjnn|data_aux [7] = DFFEAS(((\reg_txkjnn|state.BYTE_TWO~regout  & (\reg_txkjnn|buffer [15])) # (!\reg_txkjnn|state.BYTE_TWO~regout  & ((\reg_txkjnn|buffer [7])))), GLOBAL(\clk~combout ), VCC, , \reg_txkjnn|data_aux~0 , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\reg_txkjnn|buffer [15]),
	.datac(\reg_txkjnn|buffer [7]),
	.datad(\reg_txkjnn|state.BYTE_TWO~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\reg_txkjnn|data_aux~0 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_txkjnn|data_aux [7]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_txkjnn|data_aux[7] .lut_mask = "ccf0";
defparam \reg_txkjnn|data_aux[7] .operation_mode = "normal";
defparam \reg_txkjnn|data_aux[7] .output_mode = "reg_only";
defparam \reg_txkjnn|data_aux[7] .register_cascade_mode = "off";
defparam \reg_txkjnn|data_aux[7] .sum_lutc_input = "datac";
defparam \reg_txkjnn|data_aux[7] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y1_N9
maxii_lcell \lkm|data_bit[7] (
// Equation(s):
// \lkm|data_bit [7] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , \lkm|data_bit[1]~0_combout , \reg_txkjnn|data_aux [7], , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\reg_txkjnn|data_aux [7]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\lkm|data_bit[1]~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\lkm|data_bit [7]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lkm|data_bit[7] .lut_mask = "0000";
defparam \lkm|data_bit[7] .operation_mode = "normal";
defparam \lkm|data_bit[7] .output_mode = "reg_only";
defparam \lkm|data_bit[7] .register_cascade_mode = "off";
defparam \lkm|data_bit[7] .sum_lutc_input = "datac";
defparam \lkm|data_bit[7] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y2_N5
maxii_lcell \rx|Decoder0~0 (
// Equation(s):
// \rx|Decoder0~0_combout  = (!\rx|bit_index [0] & (\rx|bit_index [1] & (\rx|data_reg[7]~0_combout  & \rx|bit_index [2])))

	.clk(gnd),
	.dataa(\rx|bit_index [0]),
	.datab(\rx|bit_index [1]),
	.datac(\rx|data_reg[7]~0_combout ),
	.datad(\rx|bit_index [2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\rx|Decoder0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|Decoder0~0 .lut_mask = "4000";
defparam \rx|Decoder0~0 .operation_mode = "normal";
defparam \rx|Decoder0~0 .output_mode = "comb_only";
defparam \rx|Decoder0~0 .register_cascade_mode = "off";
defparam \rx|Decoder0~0 .sum_lutc_input = "datac";
defparam \rx|Decoder0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y2_N7
maxii_lcell \rx|data_reg[6] (
// Equation(s):
// \rx|data_reg [6] = DFFEAS(((\rx|Decoder0~0_combout  & (!\rx|rx_data~regout )) # (!\rx|Decoder0~0_combout  & ((\rx|data_reg [6])))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\rx|rx_data~regout ),
	.datab(vcc),
	.datac(\rx|data_reg [6]),
	.datad(\rx|Decoder0~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\rx|data_reg [6]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|data_reg[6] .lut_mask = "55f0";
defparam \rx|data_reg[6] .operation_mode = "normal";
defparam \rx|data_reg[6] .output_mode = "reg_only";
defparam \rx|data_reg[6] .register_cascade_mode = "off";
defparam \rx|data_reg[6] .sum_lutc_input = "datac";
defparam \rx|data_reg[6] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y2_N4
maxii_lcell \reg_rx|buffer_data[6] (
// Equation(s):
// \reg_rx|buffer_data [6] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , \reg_rx|buffer_data[1]~0 , \rx|data_reg [6], , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\rx|data_reg [6]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\reg_rx|buffer_data[1]~0 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_rx|buffer_data [6]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_rx|buffer_data[6] .lut_mask = "0000";
defparam \reg_rx|buffer_data[6] .operation_mode = "normal";
defparam \reg_rx|buffer_data[6] .output_mode = "reg_only";
defparam \reg_rx|buffer_data[6] .register_cascade_mode = "off";
defparam \reg_rx|buffer_data[6] .sum_lutc_input = "datac";
defparam \reg_rx|buffer_data[6] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y4_N4
maxii_lcell \reg_rx|registrar[14] (
// Equation(s):
// \reg_rx|registrar [14] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , \reg_rx|state.ADD_ADDRESS~regout , \reg_rx|buffer_data [6], , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\reg_rx|buffer_data [6]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\reg_rx|state.ADD_ADDRESS~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_rx|registrar [14]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_rx|registrar[14] .lut_mask = "0000";
defparam \reg_rx|registrar[14] .operation_mode = "normal";
defparam \reg_rx|registrar[14] .output_mode = "reg_only";
defparam \reg_rx|registrar[14] .register_cascade_mode = "off";
defparam \reg_rx|registrar[14] .sum_lutc_input = "datac";
defparam \reg_rx|registrar[14] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y4_N5
maxii_lcell \reg_txkjnn|buffer[6] (
// Equation(s):
// \reg_txkjnn|buffer [6] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , \reg_txkjnn|Selector1~0 , \reg_rx|registrar [14], , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\reg_rx|registrar [14]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\reg_txkjnn|Selector1~0 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_txkjnn|buffer [6]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_txkjnn|buffer[6] .lut_mask = "0000";
defparam \reg_txkjnn|buffer[6] .operation_mode = "normal";
defparam \reg_txkjnn|buffer[6] .output_mode = "reg_only";
defparam \reg_txkjnn|buffer[6] .register_cascade_mode = "off";
defparam \reg_txkjnn|buffer[6] .sum_lutc_input = "datac";
defparam \reg_txkjnn|buffer[6] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y4_N4
maxii_lcell \reg_rx|registrar[6] (
// Equation(s):
// \reg_rx|registrar [6] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , \reg_rx|state.ADD_COMMAND~regout , \reg_rx|buffer_data [6], , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\reg_rx|buffer_data [6]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\reg_rx|state.ADD_COMMAND~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_rx|registrar [6]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_rx|registrar[6] .lut_mask = "0000";
defparam \reg_rx|registrar[6] .operation_mode = "normal";
defparam \reg_rx|registrar[6] .output_mode = "reg_only";
defparam \reg_rx|registrar[6] .register_cascade_mode = "off";
defparam \reg_rx|registrar[6] .sum_lutc_input = "datac";
defparam \reg_rx|registrar[6] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y4_N9
maxii_lcell \reg_txkjnn|buffer[14] (
// Equation(s):
// \reg_txkjnn|buffer [14] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , \reg_txkjnn|Selector1~0 , \reg_rx|registrar [6], , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\reg_rx|registrar [6]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\reg_txkjnn|Selector1~0 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_txkjnn|buffer [14]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_txkjnn|buffer[14] .lut_mask = "0000";
defparam \reg_txkjnn|buffer[14] .operation_mode = "normal";
defparam \reg_txkjnn|buffer[14] .output_mode = "reg_only";
defparam \reg_txkjnn|buffer[14] .register_cascade_mode = "off";
defparam \reg_txkjnn|buffer[14] .sum_lutc_input = "datac";
defparam \reg_txkjnn|buffer[14] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y3_N3
maxii_lcell \reg_txkjnn|data_aux[6] (
// Equation(s):
// \reg_txkjnn|data_aux [6] = DFFEAS(((\reg_txkjnn|state.BYTE_TWO~regout  & ((\reg_txkjnn|buffer [14]))) # (!\reg_txkjnn|state.BYTE_TWO~regout  & (\reg_txkjnn|buffer [6]))), GLOBAL(\clk~combout ), VCC, , \reg_txkjnn|data_aux~0 , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\reg_txkjnn|buffer [6]),
	.datac(\reg_txkjnn|buffer [14]),
	.datad(\reg_txkjnn|state.BYTE_TWO~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\reg_txkjnn|data_aux~0 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_txkjnn|data_aux [6]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_txkjnn|data_aux[6] .lut_mask = "f0cc";
defparam \reg_txkjnn|data_aux[6] .operation_mode = "normal";
defparam \reg_txkjnn|data_aux[6] .output_mode = "reg_only";
defparam \reg_txkjnn|data_aux[6] .register_cascade_mode = "off";
defparam \reg_txkjnn|data_aux[6] .sum_lutc_input = "datac";
defparam \reg_txkjnn|data_aux[6] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y2_N1
maxii_lcell \rx|Decoder0~2 (
// Equation(s):
// \rx|Decoder0~2_combout  = (!\rx|bit_index [0] & (!\rx|bit_index [1] & (\rx|data_reg[7]~0_combout  & \rx|bit_index [2])))

	.clk(gnd),
	.dataa(\rx|bit_index [0]),
	.datab(\rx|bit_index [1]),
	.datac(\rx|data_reg[7]~0_combout ),
	.datad(\rx|bit_index [2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\rx|Decoder0~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|Decoder0~2 .lut_mask = "1000";
defparam \rx|Decoder0~2 .operation_mode = "normal";
defparam \rx|Decoder0~2 .output_mode = "comb_only";
defparam \rx|Decoder0~2 .register_cascade_mode = "off";
defparam \rx|Decoder0~2 .sum_lutc_input = "datac";
defparam \rx|Decoder0~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y2_N2
maxii_lcell \rx|data_reg[4] (
// Equation(s):
// \rx|data_reg [4] = DFFEAS((\rx|Decoder0~2_combout  & (!\rx|rx_data~regout )) # (!\rx|Decoder0~2_combout  & (((\rx|data_reg [4])))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\rx|rx_data~regout ),
	.datab(\rx|data_reg [4]),
	.datac(\rx|Decoder0~2_combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\rx|data_reg [4]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|data_reg[4] .lut_mask = "5c5c";
defparam \rx|data_reg[4] .operation_mode = "normal";
defparam \rx|data_reg[4] .output_mode = "reg_only";
defparam \rx|data_reg[4] .register_cascade_mode = "off";
defparam \rx|data_reg[4] .sum_lutc_input = "datac";
defparam \rx|data_reg[4] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y2_N9
maxii_lcell \reg_rx|buffer_data[4] (
// Equation(s):
// \reg_rx|buffer_data [4] = DFFEAS((((\rx|data_reg [4]))), GLOBAL(\clk~combout ), VCC, , \reg_rx|buffer_data[1]~0 , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\rx|data_reg [4]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\reg_rx|buffer_data[1]~0 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_rx|buffer_data [4]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_rx|buffer_data[4] .lut_mask = "ff00";
defparam \reg_rx|buffer_data[4] .operation_mode = "normal";
defparam \reg_rx|buffer_data[4] .output_mode = "reg_only";
defparam \reg_rx|buffer_data[4] .register_cascade_mode = "off";
defparam \reg_rx|buffer_data[4] .sum_lutc_input = "datac";
defparam \reg_rx|buffer_data[4] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y4_N1
maxii_lcell \reg_rx|registrar[4] (
// Equation(s):
// \reg_rx|registrar [4] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , \reg_rx|state.ADD_COMMAND~regout , \reg_rx|buffer_data [4], , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\reg_rx|buffer_data [4]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\reg_rx|state.ADD_COMMAND~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_rx|registrar [4]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_rx|registrar[4] .lut_mask = "0000";
defparam \reg_rx|registrar[4] .operation_mode = "normal";
defparam \reg_rx|registrar[4] .output_mode = "reg_only";
defparam \reg_rx|registrar[4] .register_cascade_mode = "off";
defparam \reg_rx|registrar[4] .sum_lutc_input = "datac";
defparam \reg_rx|registrar[4] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y4_N9
maxii_lcell \reg_txkjnn|buffer[12] (
// Equation(s):
// \reg_txkjnn|buffer [12] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , \reg_txkjnn|Selector1~0 , \reg_rx|registrar [4], , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\reg_rx|registrar [4]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\reg_txkjnn|Selector1~0 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_txkjnn|buffer [12]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_txkjnn|buffer[12] .lut_mask = "0000";
defparam \reg_txkjnn|buffer[12] .operation_mode = "normal";
defparam \reg_txkjnn|buffer[12] .output_mode = "reg_only";
defparam \reg_txkjnn|buffer[12] .register_cascade_mode = "off";
defparam \reg_txkjnn|buffer[12] .sum_lutc_input = "datac";
defparam \reg_txkjnn|buffer[12] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y4_N6
maxii_lcell \reg_rx|registrar[12] (
// Equation(s):
// \reg_rx|registrar [12] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , \reg_rx|state.ADD_ADDRESS~regout , \reg_rx|buffer_data [4], , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\reg_rx|buffer_data [4]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\reg_rx|state.ADD_ADDRESS~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_rx|registrar [12]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_rx|registrar[12] .lut_mask = "0000";
defparam \reg_rx|registrar[12] .operation_mode = "normal";
defparam \reg_rx|registrar[12] .output_mode = "reg_only";
defparam \reg_rx|registrar[12] .register_cascade_mode = "off";
defparam \reg_rx|registrar[12] .sum_lutc_input = "datac";
defparam \reg_rx|registrar[12] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y4_N4
maxii_lcell \reg_txkjnn|buffer[4] (
// Equation(s):
// \reg_txkjnn|buffer [4] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , \reg_txkjnn|Selector1~0 , \reg_rx|registrar [12], , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\reg_rx|registrar [12]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\reg_txkjnn|Selector1~0 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_txkjnn|buffer [4]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_txkjnn|buffer[4] .lut_mask = "0000";
defparam \reg_txkjnn|buffer[4] .operation_mode = "normal";
defparam \reg_txkjnn|buffer[4] .output_mode = "reg_only";
defparam \reg_txkjnn|buffer[4] .register_cascade_mode = "off";
defparam \reg_txkjnn|buffer[4] .sum_lutc_input = "datac";
defparam \reg_txkjnn|buffer[4] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y4_N3
maxii_lcell \reg_txkjnn|data_aux[4] (
// Equation(s):
// \reg_txkjnn|data_aux [4] = DFFEAS(((\reg_txkjnn|state.BYTE_TWO~regout  & (\reg_txkjnn|buffer [12])) # (!\reg_txkjnn|state.BYTE_TWO~regout  & ((\reg_txkjnn|buffer [4])))), GLOBAL(\clk~combout ), VCC, , \reg_txkjnn|data_aux~0 , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\reg_txkjnn|buffer [12]),
	.datac(\reg_txkjnn|buffer [4]),
	.datad(\reg_txkjnn|state.BYTE_TWO~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\reg_txkjnn|data_aux~0 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_txkjnn|data_aux [4]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_txkjnn|data_aux[4] .lut_mask = "ccf0";
defparam \reg_txkjnn|data_aux[4] .operation_mode = "normal";
defparam \reg_txkjnn|data_aux[4] .output_mode = "reg_only";
defparam \reg_txkjnn|data_aux[4] .register_cascade_mode = "off";
defparam \reg_txkjnn|data_aux[4] .sum_lutc_input = "datac";
defparam \reg_txkjnn|data_aux[4] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y1_N7
maxii_lcell \lkm|data_bit[4] (
// Equation(s):
// \lkm|data_bit [4] = DFFEAS((((\reg_txkjnn|data_aux [4]))), GLOBAL(\clk~combout ), VCC, , \lkm|data_bit[1]~0_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\reg_txkjnn|data_aux [4]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\lkm|data_bit[1]~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\lkm|data_bit [4]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lkm|data_bit[4] .lut_mask = "ff00";
defparam \lkm|data_bit[4] .operation_mode = "normal";
defparam \lkm|data_bit[4] .output_mode = "reg_only";
defparam \lkm|data_bit[4] .register_cascade_mode = "off";
defparam \lkm|data_bit[4] .sum_lutc_input = "datac";
defparam \lkm|data_bit[4] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y2_N4
maxii_lcell \rx|Decoder0~1 (
// Equation(s):
// \rx|Decoder0~1_combout  = (\rx|bit_index [0] & (!\rx|bit_index [1] & (\rx|data_reg[7]~0_combout  & \rx|bit_index [2])))

	.clk(gnd),
	.dataa(\rx|bit_index [0]),
	.datab(\rx|bit_index [1]),
	.datac(\rx|data_reg[7]~0_combout ),
	.datad(\rx|bit_index [2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\rx|Decoder0~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|Decoder0~1 .lut_mask = "2000";
defparam \rx|Decoder0~1 .operation_mode = "normal";
defparam \rx|Decoder0~1 .output_mode = "comb_only";
defparam \rx|Decoder0~1 .register_cascade_mode = "off";
defparam \rx|Decoder0~1 .sum_lutc_input = "datac";
defparam \rx|Decoder0~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y2_N0
maxii_lcell \rx|data_reg[5] (
// Equation(s):
// \rx|data_reg [5] = DFFEAS(((\rx|Decoder0~1_combout  & (!\rx|rx_data~regout )) # (!\rx|Decoder0~1_combout  & ((\rx|data_reg [5])))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\rx|rx_data~regout ),
	.datab(vcc),
	.datac(\rx|data_reg [5]),
	.datad(\rx|Decoder0~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\rx|data_reg [5]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \rx|data_reg[5] .lut_mask = "55f0";
defparam \rx|data_reg[5] .operation_mode = "normal";
defparam \rx|data_reg[5] .output_mode = "reg_only";
defparam \rx|data_reg[5] .register_cascade_mode = "off";
defparam \rx|data_reg[5] .sum_lutc_input = "datac";
defparam \rx|data_reg[5] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y2_N8
maxii_lcell \reg_rx|buffer_data[5] (
// Equation(s):
// \reg_rx|buffer_data [5] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , \reg_rx|buffer_data[1]~0 , \rx|data_reg [5], , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\rx|data_reg [5]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\reg_rx|buffer_data[1]~0 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_rx|buffer_data [5]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_rx|buffer_data[5] .lut_mask = "0000";
defparam \reg_rx|buffer_data[5] .operation_mode = "normal";
defparam \reg_rx|buffer_data[5] .output_mode = "reg_only";
defparam \reg_rx|buffer_data[5] .register_cascade_mode = "off";
defparam \reg_rx|buffer_data[5] .sum_lutc_input = "datac";
defparam \reg_rx|buffer_data[5] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y4_N9
maxii_lcell \reg_rx|registrar[13] (
// Equation(s):
// \reg_rx|registrar [13] = DFFEAS((((\reg_rx|buffer_data [5]))), GLOBAL(\clk~combout ), VCC, , \reg_rx|state.ADD_ADDRESS~regout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\reg_rx|buffer_data [5]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\reg_rx|state.ADD_ADDRESS~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_rx|registrar [13]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_rx|registrar[13] .lut_mask = "ff00";
defparam \reg_rx|registrar[13] .operation_mode = "normal";
defparam \reg_rx|registrar[13] .output_mode = "reg_only";
defparam \reg_rx|registrar[13] .register_cascade_mode = "off";
defparam \reg_rx|registrar[13] .sum_lutc_input = "datac";
defparam \reg_rx|registrar[13] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y4_N8
maxii_lcell \reg_txkjnn|buffer[5] (
// Equation(s):
// \reg_txkjnn|buffer [5] = DFFEAS((((\reg_rx|registrar [13]))), GLOBAL(\clk~combout ), VCC, , \reg_txkjnn|Selector1~0 , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\reg_rx|registrar [13]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\reg_txkjnn|Selector1~0 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_txkjnn|buffer [5]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_txkjnn|buffer[5] .lut_mask = "ff00";
defparam \reg_txkjnn|buffer[5] .operation_mode = "normal";
defparam \reg_txkjnn|buffer[5] .output_mode = "reg_only";
defparam \reg_txkjnn|buffer[5] .register_cascade_mode = "off";
defparam \reg_txkjnn|buffer[5] .sum_lutc_input = "datac";
defparam \reg_txkjnn|buffer[5] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y4_N7
maxii_lcell \reg_rx|registrar[5] (
// Equation(s):
// \reg_rx|registrar [5] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , \reg_rx|state.ADD_COMMAND~regout , \reg_rx|buffer_data [5], , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\reg_rx|buffer_data [5]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\reg_rx|state.ADD_COMMAND~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_rx|registrar [5]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_rx|registrar[5] .lut_mask = "0000";
defparam \reg_rx|registrar[5] .operation_mode = "normal";
defparam \reg_rx|registrar[5] .output_mode = "reg_only";
defparam \reg_rx|registrar[5] .register_cascade_mode = "off";
defparam \reg_rx|registrar[5] .sum_lutc_input = "datac";
defparam \reg_rx|registrar[5] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y4_N0
maxii_lcell \reg_txkjnn|buffer[13] (
// Equation(s):
// \reg_txkjnn|buffer [13] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , \reg_txkjnn|Selector1~0 , \reg_rx|registrar [5], , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\reg_rx|registrar [5]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\reg_txkjnn|Selector1~0 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_txkjnn|buffer [13]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_txkjnn|buffer[13] .lut_mask = "0000";
defparam \reg_txkjnn|buffer[13] .operation_mode = "normal";
defparam \reg_txkjnn|buffer[13] .output_mode = "reg_only";
defparam \reg_txkjnn|buffer[13] .register_cascade_mode = "off";
defparam \reg_txkjnn|buffer[13] .sum_lutc_input = "datac";
defparam \reg_txkjnn|buffer[13] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y4_N8
maxii_lcell \reg_txkjnn|data_aux[5] (
// Equation(s):
// \reg_txkjnn|data_aux [5] = DFFEAS(((\reg_txkjnn|state.BYTE_TWO~regout  & ((\reg_txkjnn|buffer [13]))) # (!\reg_txkjnn|state.BYTE_TWO~regout  & (\reg_txkjnn|buffer [5]))), GLOBAL(\clk~combout ), VCC, , \reg_txkjnn|data_aux~0 , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\reg_txkjnn|buffer [5]),
	.datac(\reg_txkjnn|buffer [13]),
	.datad(\reg_txkjnn|state.BYTE_TWO~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\reg_txkjnn|data_aux~0 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\reg_txkjnn|data_aux [5]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \reg_txkjnn|data_aux[5] .lut_mask = "f0cc";
defparam \reg_txkjnn|data_aux[5] .operation_mode = "normal";
defparam \reg_txkjnn|data_aux[5] .output_mode = "reg_only";
defparam \reg_txkjnn|data_aux[5] .register_cascade_mode = "off";
defparam \reg_txkjnn|data_aux[5] .sum_lutc_input = "datac";
defparam \reg_txkjnn|data_aux[5] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y1_N3
maxii_lcell \lkm|data_bit[5] (
// Equation(s):
// \lkm|Mux0~0  = (\lkm|bit_index [0] & (((B1_data_bit[5]) # (\lkm|bit_index [1])))) # (!\lkm|bit_index [0] & (\lkm|data_bit [4] & ((!\lkm|bit_index [1]))))

	.clk(\clk~combout ),
	.dataa(\lkm|bit_index [0]),
	.datab(\lkm|data_bit [4]),
	.datac(\reg_txkjnn|data_aux [5]),
	.datad(\lkm|bit_index [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\lkm|data_bit[1]~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lkm|Mux0~0 ),
	.regout(\lkm|data_bit [5]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lkm|data_bit[5] .lut_mask = "aae4";
defparam \lkm|data_bit[5] .operation_mode = "normal";
defparam \lkm|data_bit[5] .output_mode = "comb_only";
defparam \lkm|data_bit[5] .register_cascade_mode = "off";
defparam \lkm|data_bit[5] .sum_lutc_input = "qfbk";
defparam \lkm|data_bit[5] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y1_N2
maxii_lcell \lkm|data_bit[6] (
// Equation(s):
// \lkm|Mux0~1  = (\lkm|bit_index [1] & ((\lkm|Mux0~0  & (\lkm|data_bit [7])) # (!\lkm|Mux0~0  & ((B1_data_bit[6]))))) # (!\lkm|bit_index [1] & (((\lkm|Mux0~0 ))))

	.clk(\clk~combout ),
	.dataa(\lkm|bit_index [1]),
	.datab(\lkm|data_bit [7]),
	.datac(\reg_txkjnn|data_aux [6]),
	.datad(\lkm|Mux0~0 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\lkm|data_bit[1]~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lkm|Mux0~1 ),
	.regout(\lkm|data_bit [6]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lkm|data_bit[6] .lut_mask = "dda0";
defparam \lkm|data_bit[6] .operation_mode = "normal";
defparam \lkm|data_bit[6] .output_mode = "comb_only";
defparam \lkm|data_bit[6] .register_cascade_mode = "off";
defparam \lkm|data_bit[6] .sum_lutc_input = "qfbk";
defparam \lkm|data_bit[6] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y1_N8
maxii_lcell \lkm|Selector0~0 (
// Equation(s):
// \lkm|Selector0~0_combout  = ((\lkm|bit_index [2] & ((\lkm|Mux0~1 ))) # (!\lkm|bit_index [2] & (\lkm|Mux0~3 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\lkm|bit_index [2]),
	.datac(\lkm|Mux0~3 ),
	.datad(\lkm|Mux0~1 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lkm|Selector0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lkm|Selector0~0 .lut_mask = "fc30";
defparam \lkm|Selector0~0 .operation_mode = "normal";
defparam \lkm|Selector0~0 .output_mode = "comb_only";
defparam \lkm|Selector0~0 .register_cascade_mode = "off";
defparam \lkm|Selector0~0 .sum_lutc_input = "datac";
defparam \lkm|Selector0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y1_N6
maxii_lcell \lkm|out_tx (
// Equation(s):
// \lkm|out_tx~regout  = DFFEAS((\lkm|state.STOP~regout ) # (((\lkm|Selector0~0_combout  & \lkm|state.DATA~regout )) # (!\lkm|state.00~regout )), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\lkm|Selector0~0_combout ),
	.datab(\lkm|state.STOP~regout ),
	.datac(\lkm|state.DATA~regout ),
	.datad(\lkm|state.00~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\lkm|out_tx~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lkm|out_tx .lut_mask = "ecff";
defparam \lkm|out_tx .operation_mode = "normal";
defparam \lkm|out_tx .output_mode = "reg_only";
defparam \lkm|out_tx .register_cascade_mode = "off";
defparam \lkm|out_tx .sum_lutc_input = "datac";
defparam \lkm|out_tx .synch_mode = "off";
// synopsys translate_on

// Location: PIN_49,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \tx_active~I (
	.datain(\lkm|tx_active~regout ),
	.oe(vcc),
	.combout(),
	.padio(tx_active));
// synopsys translate_off
defparam \tx_active~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_51,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \out_tx~I (
	.datain(\lkm|out_tx~regout ),
	.oe(vcc),
	.combout(),
	.padio(out_tx));
// synopsys translate_off
defparam \out_tx~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_86,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \done~I (
	.datain(\lkm|done~regout ),
	.oe(vcc),
	.combout(),
	.padio(done));
// synopsys translate_off
defparam \done~I .operation_mode = "output";
// synopsys translate_on

endmodule
